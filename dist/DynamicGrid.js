class DynamicGrid{constructor(config){this.engine=new SJQLEngine(config.engine),this.engine.plugins=config.plugins??[],this.engine.addPlugin(new stringTypePlugin,!0),this.engine.addPlugin(new numberTypePlugin,!0),this.engine.addPlugin(new booleanTypePlugin,!0),config.headers&&Object.entries(config.headers).forEach((([key,value])=>{this.engine.headers[key]=value.toLowerCase()})),this.virtualScrolling=config.ui.virtualScrolling??!0,this.rowHeight=config.ui.rowHeight||40,this.visibleRows=config.ui.visibleRows||20,this.ui=new DynamicGridUI(this,config.ui)}setData(data){this.engine.parseData(data),this.engine.createDataIndex()}render(query){this.ui.render(this.engine.query(query))}}class DynamicGridUI{constructor(dynamicGrid,ui_config){this.dynamicGrid=dynamicGrid,this.sortState={},this.ui_config={virtualScrolling:ui_config.virtualScrolling,rowHeight:ui_config.rowHeight,visibleRows:ui_config.visibleRows},this.containerId=ui_config.containerId,this.init(this.containerId)}init(containerId){if(this.container=document.querySelector(containerId),!this.container)throw new GridError(`Container with id "${containerId}" not found`)}render(data){this.container.className="dynamic-grid-container",this.container.innerHTML="";const table=document.createElement("table");table.className="dynamic-grid",table.appendChild(this.renderHeader()),table.appendChild(this.renderBody(data)),this.container.appendChild(table)}renderHeader(){const thead=document.createElement("thead"),headerRow=document.createElement("tr");return Object.entries(this.dynamicGrid.engine.headers).forEach((([key,type])=>{const correspondingPlugin=this.dynamicGrid.engine.getPlugin(type),th=document.createElement("th"),headerContent=document.createElement("div");headerContent.className="header-content";const titleWrapper=document.createElement("div");titleWrapper.className="title-wrapper";const headerText=document.createElement("span");headerText.textContent=key,titleWrapper.appendChild(headerText);const sortButton=document.createElement("button");sortButton.className="sort-button",sortButton.innerHTML='<span class="sort-icon"></span>',sortButton.onclick=()=>this.handleSort(key),titleWrapper.appendChild(sortButton);const moreButton=document.createElement("button");moreButton.className="more-button",moreButton.innerHTML='<span class="more-icon">&#10247;</span>',moreButton.onclick=()=>correspondingPlugin.handleMore(key,this.dynamicGrid),titleWrapper.appendChild(moreButton),headerContent.appendChild(titleWrapper),th.appendChild(headerContent),headerRow.appendChild(th)})),thead.appendChild(headerRow),thead}renderBody(data){const tbody=document.createElement("tbody");return data.forEach(((row,index)=>{const tr=document.createElement("tr");tr.className=index%2==0?"row-even":"row-odd",Object.keys(this.dynamicGrid.engine.headers).forEach((key=>{tr.append(this.dynamicGrid.engine.getPlugin(this.dynamicGrid.engine.headers[key]).renderCell(row[key]))})),tbody.appendChild(tr)})),tbody}handleSort(key){this.sortState[key]="asc"===this.sortState[key]?"desc":"asc";const sortedData=this.dynamicGrid.engine.setSort(key,this.sortState[key]);this.render(sortedData)}}class TypePlugin{constructor(){this.name=this.constructor.name,this.operators=[],this.addOperators()}getJSQLFormat(value){return console.warn("getHeaderFormat not implemented for plugin: ",this.name),value.toString()}validate(value){return console.warn("validate not implemented for plugin: ",this.name),!0}evaluate(query,dataIndexes,data,indices){return console.warn("evaluate not implemented for plugin: ",this.name),data}evaluateCondition(dataValue,operator,value){return console.warn("evaluateCondition not implemented for plugin: ",this.name),!1}sort(query,data){const{field:field,value:value}=query;return data.sort(((a,b)=>"asc"===value?a[field].localeCompare(b[field]):"desc"===value?b[field].localeCompare(a[field]):void 0))}addOperators(){this.operators=["==","!=","in"]}checkOperator(operator){try{return this.operators.find((op=>op===operator))}catch(e){return}}getOperatorSymbols=()=>this.operators;renderHeader(key){const elem=document.createElement("th");return elem.innerHTML=key,elem}renderCell(value){const elem=document.createElement("td");return elem.innerHTML=value,elem}handleMore(key,dynamicGrid){console.warn("handleMore not implemented for plugin: ",this.name)}}class stringTypePlugin extends TypePlugin{constructor(){super()}validate(value){return"string"==typeof value}getJSQLFormat(value){return'"'===value[0]&&'"'===value[value.length-1]||"'"===value[0]&&"'"===value[value.length-1]?value.substring(1,value.length-1):value}evaluate(query,dataIndexes,data,indices){if(dataIndexes&&indices&&dataIndexes.size<=indices.size)for(const index of dataIndexes.keys())this.evaluateCondition(index,query.operator,query.value)||dataIndexes.get(index).forEach((idx=>indices.delete(idx)));else for(const index of indices)this.evaluateCondition(data[index][query.field],query.operator,query.value)||indices.delete(index);return indices}evaluateCondition(dataValue,operator,value){if(Array.isArray(value)&&value.length>0&&"in"===operator)return value.includes(dataValue);if("string"==typeof value)switch(operator){case"==":return dataValue===value;case"!=":return dataValue!==value;case"%=":return dataValue.startsWith(value);case"=%":return dataValue.endsWith(value);case"*=":return dataValue.includes(value);case"!*=":return!dataValue.includes(value)}return!1}renderHeader(key){const elem=document.createElement("th");return elem.innerHTML=key,elem}renderCell(value){const elem=document.createElement("td");return elem.innerHTML=value,elem}addOperators(){super.addOperators(),this.operators.push("%=","=%","*=","!*=")}}class numberTypePlugin extends TypePlugin{constructor(){super()}validate(value){return!isNaN(Number(value))}getJSQLFormat(value){if(isNaN(Number(value)))throw new GridError("Value is not a number");return value.toString()}evaluate(query,dataIndexes,data,indices){if(dataIndexes&&indices&&dataIndexes.size<=indices.size)for(const index of dataIndexes.keys())this.evaluateCondition(index,query.operator,query.value)||dataIndexes.get(index).forEach((idx=>indices.delete(idx)));else for(const index of indices)this.evaluateCondition(data[index][query.field],query.operator,query.value)||indices.delete(index);return indices}evaluateCondition(dataValue,operator,value){switch(operator){case">":return dataValue>value;case"<":return dataValue<value;case">=":return dataValue>=value;case"<=":return dataValue<=value;case"==":return dataValue===value;case"!=":return dataValue!==value}}renderHeader(key){const elem=document.createElement("th");return elem.innerHTML=key,elem}renderCell(value){const elem=document.createElement("td");return elem.innerHTML=value.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."),elem}sort(query,data){const{field:field,value:value}=query;return data.sort(((a,b)=>"asc"===value?a[field]-b[field]:"desc"===value?b[field]-a[field]:void 0))}addOperators(){super.addOperators(),this.operators.push(">","<",">=","<=")}}class booleanTypePlugin extends TypePlugin{constructor(){super()}validate(value){return"boolean"==typeof value||"string"==typeof value&&("true"===value||"false"===value)}getJSQLFormat(value){return"true"===value.toLowerCase()}evaluate(query,dataIndexes,data,indices){if(dataIndexes){const allowedValues=dataIndexes.get(query.value);return new Set([...indices].filter((x=>allowedValues.has(x))))}return new Set(data.map(((row,i)=>row[query.field]===query.value?i:null)).filter((x=>null!==x)))}evaluateCondition(dataValue,operator,value){return dataValue===value}sort(query,data){const{field:field,value:value}=query;return data.sort(((a,b)=>"asc"===value?a[field]-b[field]:"desc"===value?b[field]-a[field]:void 0))}renderHeader(key){const elem=document.createElement("th");return elem.innerHTML=key,elem}renderCell(value){const elem=document.createElement("td"),checkbox=document.createElement("input");return checkbox.type="checkbox",checkbox.checked=value,checkbox.disabled=!0,elem.appendChild(checkbox),elem}}class QueryParser{constructor(){}static QUERIES={RANGE:/range\s+(-?\d+)-?(-?\d+)?/,SORT:/sort\s+([A-Za-z]+)\s+(asc|desc)/,SELECT:/([A-Za-z]+)\s+(\S+)\s+(.+)/};parseQuery=(query,plugins,headers)=>query.split(/\s+and\s+/i).map((subQuery=>this.parseSubQuery(subQuery.trim(),plugins,headers))).filter((query=>query.queryType));parseSubQuery(subQuery,plugins,headers){subQuery=subQuery.endsWith(" and")?subQuery.slice(0,-4):subQuery;for(const[type,regex]of Object.entries(QueryParser.QUERIES)){const match=regex.exec(subQuery);if(match)return this.parseMatch(match,type,plugins,headers)||{}}return console.warn("Invalid query: "+subQuery+"\nValid queries are: "+Object.keys(QueryParser.QUERIES).join(", ").toLowerCase()),{}}parseMatch(match,type,plugins,headers){if("SELECT"===type){let[_,key,operator,value]=match;const pluginType=headers[key],plugin=plugins[pluginType];if(!plugin)throw new GridError("No plugin found for header ("+pluginType+") for key ("+key+")");let field=key,operatorObj=plugin.checkOperator(operator);if(!operatorObj)throw new GridError(this.formatOperatorError(operator,field,plugin));return plugin.validate(value)&&(value=plugin.getJSQLFormat(value)),{type:pluginType,field:field,operator:operatorObj,value:value,queryType:"SELECT"}}if("SORT"===type){let[_,key,value]=match;const pluginType=headers[key];if(!plugins.getPlugin(pluginType))throw new GridError("No plugin found for header ("+pluginType+") for key ("+key+")");return{type:pluginType,field:key,operator:"sort",value:value,queryType:"SORT"}}if("RANGE"===type){let[_,lower,upper]=match;return void 0===upper&&(upper=lower,lower=0),lower=parseInt(lower),upper=parseInt(upper),{type:"range",field:"range",operator:"range",lower:lower,upper:upper,queryType:"RANGE"}}return console.warn("Invalid query: "+match+"\nValid queries are: "+Object.keys(QueryParser.QUERIES).join(", ").toLowerCase()),{}}formatOperatorError(operator,field,plugin){return["\n\nInvalid operator:    "+operator,"       For query:    "+field,"     options are:    "+plugin.getOperatorSymbols().join(", "),"\n"].join("\n")}}class SJQLEngine{constructor(engine_config){this.data=[],this.headers=[],this.plugins=[],this.currentQuery={},this.currentQueryStr="",this.QueryParser=new QueryParser,this.config={UseDataEnumeration:engine_config.UseDataEnumeration||!1,UseDataIndexing:engine_config.UseDataIndexing||!0}}parseData(data){if(0===data.length)return console.warn("No data provided"),[];if(!Array.isArray(data))throw new GridError("Data must be an array");0===Object.keys(this.headers).length&&(console.warn("No headers provided, auto detecting headers, please provide headers for better performance"),this.autoDetectHeaders(data[0])),this.data=data.map(((item,index)=>{const newItem={};newItem.internal_id=index;for(const key of Object.keys(item))newItem[key]=item[key];return newItem}))}createDataIndex(){this.config.UseDataIndexing&&(this.dataIndexes={},Object.keys(this.headers).forEach((header=>{this.dataIndexes[header]=new Map,this.data.forEach(((row,idx)=>{const value=row[header];this.dataIndexes[header].has(value)||this.dataIndexes[header].set(value,new Set),this.dataIndexes[header].get(value).add(idx)}))})))}autoDetectHeaders(data){for(const key of Object.keys(data))!0===data[key]||!1===data[key]?this.headers[key]="boolean":isNaN(data[key])?this.headers[key]="string":this.headers[key]="number"}query(query=""){return this.data&&0!==this.data.length?query?(this.currentQuery=this.QueryParser.parseQuery(query,this.plugins,this.headers),this.currentQueryStr=query,this._query(this.currentQuery)):(console.warn("No query provided, returning all data"),this.data):(console.warn("No data provided, returning empty array"),[])}_query(query){if(!query||0===query.length)return this.data;const selectQueries=[];let sortQuery=null,rangeQuery=null,validIndices=new Set;for(const q of query)switch(q.queryType){case"SELECT":selectQueries.push(q);break;case"SORT":sortQuery=q;break;case"RANGE":rangeQuery=q}if(performance.mark("startQuery"),validIndices=new Set(this.data.map(((_,i)=>i))),this.config.UseDataEnumeration)for(let i=0;i<this.data.length;i++){const row=this.data[i];let valid=!0;for(const q of selectQueries){const plugin=this.getPlugin(q.type);if(!plugin)throw new GridError("No plugin found for header ("+q.type+") for key ("+q.field+")");if(!plugin.evaluateCondition(row[q.field],q.operator,q.value)){valid=!1;break}}if(rangeQuery&&valid)if(rangeQuery.lower>i)valid=!1;else if(rangeQuery.upper<i)break;valid||validIndices.delete(i)}else{for(const q of selectQueries){const plugin=this.getPlugin(q.type);if(!plugin)throw new GridError("No plugin found for header ("+q.type+") for key ("+q.field+")");validIndices=plugin.evaluate(q,this.dataIndexes[q.field],this.data,validIndices)}rangeQuery&&(validIndices=validIndices.filter((i=>i>=rangeQuery.lower&&i<=rangeQuery.upper)))}return sortQuery?this.getPlugin(sortQuery.type).sort(sortQuery,this.data.filter(((_,i)=>validIndices.has(i)))):this.data.filter(((_,i)=>validIndices.has(i)))}setSort(field,direction){this.sortQuery="sort "+field+" "+direction;const wholeQuery=""===this.currentQueryStr?this.sortQuery:this.currentQueryStr+" and "+this.sortQuery;return this._query(this.QueryParser.parseQuery(wholeQuery))}addPlugin(plugin,dontOverride=!1){if(!(plugin instanceof TypePlugin))throw new GridError("Plugin must extend TypePlugin");const existingPlugin=this.getPlugin(plugin.name,!0);dontOverride&&existingPlugin||(existingPlugin&&!dontOverride?(console.warn("Plugin already exists, removing the old plugin"),this.plugins[plugin.name.replace("TypePlugin","")]=plugin):this.plugins[plugin.name.replace("TypePlugin","")]=plugin)}getPlugin(name,justChecking=!1){if(!name)throw new GridError("Plugin name not provided");if("string"!=typeof name)return!1;const plugin=this.plugins[name.replace("TypePlugin","")];if(!plugin&&!justChecking)throw new GridError("Plugin not found: "+name);return!(!plugin&&justChecking)&&plugin}}class GridError extends Error{constructor(message){super(message),this.name="GridError",this.stack=""}}