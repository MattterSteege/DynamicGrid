class APIConnector{constructor(t,e,s){this.dynamicGrid=t,this.eventEmitter=e,this.endpoints={get:s.endpoints.get||"",post:s.endpoints.post||"",put:s.endpoints.put||"",delete:s.endpoints.delete||""},this.config={timeoutDelay:s.options.timeoutDelay||1e3},this.updates=[],this.eventEmitter.subscribe("dg-edit",this.onEdit.bind(this)),this.eventEmitter.subscribe("dg-save",this.onSave.bind(this))}onEdit(t){this.updates.push(t),this.config.timeoutDelay<0||(clearTimeout(this.updateTimeout),this.updateTimeout=setTimeout((async()=>{const t=this.updates;this.updates=[],this.post("update",t).then((e=>{e.error?(console.error("API Error:",e.error),this.updates.push(...t)):this.eventEmitter.emit("dg-saved")})).catch((e=>{console.error("API Error:",e),this.updates.push(...t)}))}),this.config.timeoutDelay))}onSave(){if(0===this.updates.length)return;const t=this.updates;this.updates=[],this.post("update",t).then((e=>{e.error?(console.error("API Error:",e.error),this.updates.push(...t)):this.eventEmitter.emit("dg-saved")})).catch((e=>{console.error("API Error:",e),this.updates.push(...t)}))}async get(t){const e=await fetch(this.endpoints.get+t);return await e.json()}async post(t,e){const s=await fetch(this.endpoints.post+t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return await s.json()}async put(t,e){const s=await fetch(this.endpoints.put+t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return await s.json()}async delete(t){const e=await fetch(this.endpoints.delete+t,{method:"DELETE"});return await e.json()}}
//# sourceMappingURL=APIConnector.js.map