/**
 * DynamicGrid is a library for rendering data in a grid format with dynamic querying capabilities.
 * @license MIT
 */
class DynamicGrid{constructor(config){if(this.eventEmitter=new EventEmitter,this.keyboardShortcuts=new KeyboardShortcuts,this.engine=new SJQLEngine(config.engine||{},this.eventEmitter),this.engine.plugins=config.plugins??[],this.engine.addPlugin(new stringTypePlugin,!0),this.engine.addPlugin(new numberTypePlugin,!0),this.engine.addPlugin(new booleanTypePlugin,!0),config.headers&&Object.entries(config.headers).forEach((([key,value])=>{this.engine.headers[key]="string"==typeof value?{type:value,isUnique:!1,isGroupable:!0,isHidden:!1,isEditable:!0}:{type:value.type||key,isUnique:value.isUnique||!1,isGroupable:void 0===value.isGroupable||value.isGroupable,isHidden:value.isHidden||!1,isEditable:void 0===value.isEditable||value.isEditable}})),this.virtualScrolling=config.ui.virtualScrolling??!0,this.rowHeight=config.ui.rowHeight||40,this.visibleRows=config.ui.visibleRows||20,this.ui=new DynamicGridUI(this,config.ui,this.eventEmitter),config.APIConnector&&config.APIConnector.connector){const APIconfig=config.APIConnector;this.APIConnector=new config.APIConnector.connector(this,this.eventEmitter,APIconfig),delete APIconfig.connector}}
/**
     * Imports data into the engine and creates a data index.
     * @param {string|object} data - The data to import.
     * @param {Object} [config] - The configuration for importing data.
     * @preserve
     */importData(data,config){this.engine.importData(data,config),this.engine.createDataIndex()}
/**
     * Renders the UI based on the provided input.
     * @param {string} input - A query string or data object to render the UI.
     * @preserve
     */render(input){this.ui.render(this.engine.query(input))}
/**
     * Renders the UI with the provided data. This method does not run any queries, so the data must be pre-processed already.
     * @param {object} input - The data to render.
     * @preserve
     */renderRaw(input){this.ui.render(input)}addSelect=(key,operator,value)=>this.engine.addSelect(key,operator,value);setSelect=(key,operator,value)=>this.engine.setSelect(key,operator,value);removeSelect=(key,operator,value)=>this.engine.removeSelect(key,operator,value);setSort=(key,direction)=>this.engine.setSort(key,direction);removeSort=()=>this.engine.removeSort();setRange=(lower,upper)=>this.engine.setRange(lower,upper);removeRange=()=>this.engine.removeRange();setGroup=key=>this.engine.setGroup(key);removeGroup=()=>this.engine.removeGroup();runCurrentQuery=()=>this.engine.runCurrentQuery();addConnector(connector){connector.callbacks={}}}class DynamicGridUI{constructor(dynamicGrid,ui_config,eventEmitter){this.dynamicGrid=dynamicGrid,this.containerId=ui_config.containerId,this.eventEmitter=eventEmitter,this.keyboardShortcuts=dynamicGrid.keyboardShortcuts,this.engine=dynamicGrid.engine,this.table=null,this.header=null,this.body=null,this.scrollContainer=null,this.config={minColumnWidth:ui_config.minColumnWidth??5,rowHeight:ui_config.rowHeight??40,bufferedRows:ui_config.bufferedRows??10,autoFitCellWidth:ui_config.autoFitCellWidth??"header",allowFieldEditing:ui_config.allowFieldEditing??!1},this.#_init(this.containerId),this.UIChache=0,this.UICacheRefresh=!1,this.sortDirection="asc",this.contextMenu=new ContextMenu({width:250,style:{accent:"#3b82f6",backgroundColor:"#ffffff",textColor:"#333333",padding:"4px"},closeOnClick:!0,closeOnOutsideClick:!0})}render(data){if(this.body&&this.scrollContainer&&(this.body.innerHTML="",this.scrollContainer.innerHTML="",this.body?.remove(),this.scrollContainer?.remove()),!data||0===data.length)return;const isGroupedData=(data=>Array.isArray(firstItem(data)))(data),columns=isGroupedData?Object.keys(firstItem(data)[0]):Object.keys(data[0]),firstDataItem=isGroupedData?firstItem(data)[0]:data[0],cacheHash=FastHash(columns);this.UICacheRefresh=this.UIChache!==cacheHash,this.UIChache=cacheHash,this.UICacheRefresh&&(this.table=this.#_createResizableTable(columns,firstDataItem,isGroupedData),this.#_initResizerDelegation()),this.#_renderTable(data,isGroupedData)}toggleColumn(index){const columnWidth=this.columnWidths[index];this.columnWidths[index]=0===columnWidth?100:0;const showingColumns=this.columnWidths.filter((width=>width>0)).length;this.columnWidths=this.columnWidths.map((width=>0===width?0:100/showingColumns)),this.#_updateColumnWidths(this.table)}#_init(containerId){if(this.container=document.querySelector(containerId),!this.container)throw new GridError(`Container with id "${containerId}" not found`);this.keyboardShortcuts.addShortcut("ctrl+s",(()=>this.eventEmitter.emit("dg-save")))}#_initResizerDelegation(){this.table.addEventListener("mousedown",(e=>{e.button;const resizer=e.target.closest(".resizer");if(!resizer)return;const index=parseInt(resizer.getAttribute("data-index"),10);let startX,startWidth,startNextWidth;const table=this.table;startX=e.clientX,startWidth=this.columnWidths[index],startNextWidth=this.columnWidths[index+1];const onMouseMove=e=>{const widthChange=(e.clientX-startX)/table.offsetWidth*100,newWidth=startWidth+widthChange,newNextWidth=startNextWidth-widthChange;newWidth>=this.config.minColumnWidth&&newNextWidth>=this.config.minColumnWidth&&(this.columnWidths[index]=Number(newWidth.toFixed(2)),this.columnWidths[index+1]=Number(newNextWidth.toFixed(2)),this.#_updateColumnWidths(table))},onMouseUp=()=>{document.removeEventListener("mousemove",onMouseMove),document.removeEventListener("mouseup",onMouseUp)};document.addEventListener("mousemove",onMouseMove),document.addEventListener("mouseup",onMouseUp)}))}#_renderTable(data,isGrouped){const headers=isGrouped?Object.keys(firstItem(data)[0]):Object.keys(data[0]);headers.remove("internal_id"),this.UICacheRefresh&&(this.header=this.#_createTableHeader(headers),this.table.style.display="grid",this.table.style.gridTemplateRows="40px 1fr",this.table.style.width="100%",this.table.style.height="100%",this.#_updateColumnWidths(this.table),this.table.appendChild(this.header)),this.scrollContainer?.remove(),this.scrollContainer=document.createElement("div"),this.scrollContainer.className="scroll-container",this.scrollContainer.style.overflowY="auto",this.UICacheRefresh&&(this.body=document.createElement("div"),this.body.className="body-container"),isGrouped?(this.body=this.#_createGroupedTable(data,headers),this.scrollContainer=document.createElement("div"),this.scrollContainer.className="scroll-container",this.scrollContainer.style.overflowY="auto",this.scrollContainer.appendChild(this.body),this.table.appendChild(this.scrollContainer),this.container.appendChild(this.table)):(this.scrollContainer.appendChild(this.body),this.scrollContainer.addEventListener("scroll",(()=>this.#_updateVisibleRows(data,headers,this.body,this.scrollContainer))),this.table.appendChild(this.scrollContainer),this.container.appendChild(this.table),this.#_updateVisibleRows(data,headers,this.body,this.scrollContainer))}#_updateVisibleRows(data,headers,container,scrollContainer){const totalRows=data.length,totalHeight=totalRows*this.config.rowHeight;container.style.position="relative",container.style.height=`${totalHeight}px`;const scrollTop=scrollContainer.scrollTop,containerHeight=scrollContainer.offsetHeight,startRow=Math.max(0,Math.floor(scrollTop/this.config.rowHeight)-this.config.bufferedRows),endRow=Math.min(totalRows,Math.ceil((scrollTop+containerHeight)/this.config.rowHeight)+this.config.bufferedRows),visibleRowsContainer=document.createElement("div");visibleRowsContainer.style.position="absolute",visibleRowsContainer.style.top=startRow*this.config.rowHeight+"px",visibleRowsContainer.style.left="0",visibleRowsContainer.style.right="0",visibleRowsContainer.style.display="grid",visibleRowsContainer.style.gridTemplateColumns=headers.map(((_,index)=>`var(--column-width-${index+1})`)).join(" ");for(let i=startRow;i<endRow;i++){const tableRow=this.#_createTableRow();tableRow.setAttribute("data-index",data[i].internal_id),headers.forEach((header=>{const cell=this.#_createTableCell(data[i],header);tableRow.appendChild(cell)})),visibleRowsContainer.appendChild(tableRow)}container.lastChild&&container.removeChild(container.lastChild),container.appendChild(visibleRowsContainer)}#_createGroupedTable(data,headers){this.body?.remove(),this.body=document.createElement("div"),this.body.className="body-container";const keys=Object.keys(data);for(const key of keys){const dataGroup=data[key],details=document.createElement("details");details.open=!1,details.style.margin="0",details.style.padding="0",details.style.border="0",details.style.outline="0",details.style.fontSize="100%",details.style.verticalAlign="baseline",details.style.backgroundColor="transparent",details.style.display="block",details.addEventListener("toggle",(()=>{details.open?this.#_updateVisibleRows(dataGroup,headers,viewer,scrollContainer):(viewer.innerHTML="",viewer.removeAttribute("style"))}));const summary=document.createElement("summary");summary.innerHTML=`<strong>${key}</strong>`,details.appendChild(summary);const scrollContainer=document.createElement("div");scrollContainer.className="scroll-container",scrollContainer.style.overflowY="auto",scrollContainer.style.maxHeight="700px";const viewer=document.createElement("div");viewer.className="viewer",scrollContainer.appendChild(viewer),details.appendChild(scrollContainer),scrollContainer.addEventListener("scroll",(()=>{this.#_updateVisibleRows(dataGroup,headers,viewer,scrollContainer)})),this.body.appendChild(details)}return this.body}#_createResizableTable(columns,data,isgrouped){return this.UICacheRefresh?(this.table?.remove(),isgrouped&&(columns=Object.keys(data[0])),this.columnWidths=this.#_calculateColumnWidths(data,columns),this.table=document.createElement("div"),this.table.className="table",this.#_updateColumnWidths(this.table),this.table):this.table}#_calculateColumnWidths(data,columns){if(columns=columns.filter((column=>"internal_id"!==column)),"header"===this.config.autoFitCellWidth){const charCount=columns.reduce(((acc,header)=>acc+header.length),0);this.columnWidths=columns.map((header=>header.length/charCount*100))}else if("content"===this.config.autoFitCellWidth){const charCount=columns.reduce(((acc,header)=>acc+Math.max(data[header].toString().length,5)),0);this.columnWidths=columns.map((header=>Math.max(data[header].toString().length,5)/charCount*100))}else if("both"===this.config.autoFitCellWidth){const charCount=columns.reduce(((acc,header)=>acc+Math.max(header.length,5)+Math.max(data[header].toString().length,5)),0);this.columnWidths=columns.map((header=>(Math.max(header.length,5)+Math.max(data[header].toString().length,5))/charCount*100))}else"none"!==this.config.autoFitCellWidth&&this.config.autoFitCellWidth||(this.columnWidths=Array(columns.length).fill(100/columns.length));return this.columnWidths}#_createTableHeader(headers){const createTableCell=headers=>{const cell=document.createElement("div");return cell.className="cell",cell.textContent=headers,this.engine.headers[headers].isEditable||(cell.style.backgroundColor="#fafafa",cell.style.color="#333",cell.style.fontStyle="italic",cell.style.cursor="default"),cell},header=document.createElement("div");return header.className="row header",header.style.display="grid",header.style.gridTemplateColumns=headers.map(((_,index)=>`var(--column-width-${index+1})`)).join(" "),headers.forEach(((_header,index)=>{const cell=createTableCell(_header);cell.title=_header,cell.setAttribute("value_type",this.engine.headers[_header].type),cell.setAttribute("editable",this.engine.headers[_header].isEditable),cell.addEventListener("click",(e=>{e.preventDefault(),e.stopPropagation(),this.sortColumn!==_header?(this.sortColumn=_header,this.sortDirection="asc"):this.sortDirection="asc"===this.sortDirection?"desc":"asc",this.engine.setSort(this.sortColumn,this.sortDirection),this.render(this.engine.runCurrentQuery())})),cell.addEventListener("contextmenu",(e=>{e.preventDefault(),e.stopPropagation(),this.engine.getPlugin(cell.getAttribute("value_type")).showMore(cell.title,cell,this.engine,this)})),index<headers.length-1&&cell.appendChild(this.#_createResizer(index)),header.appendChild(cell)})),header}#_createTableRow(){const row=document.createElement("div");return row.className="row",row.style.display="contents",row}#_createTableCell(data,column){const content=data[column],headerData=this.engine.headers[column],plugin=this.engine.getPlugin(headerData.type);if(this.config.allowFieldEditing&&headerData.isEditable){const onEdit=callback=>{this.eventEmitter.emit("dg-edit",{column:column,row:data,previousValue:content,newValue:callback})},cell=plugin.renderEditableCell(content,onEdit);return cell.classList.add("cell"),cell}{const cell=plugin.renderCell(content);return cell.classList.add("cell"),headerData.isEditable||(cell.style.backgroundColor="#fafafa",cell.style.color="#333",cell.style.fontStyle="italic",cell.style.cursor="default"),cell}}#_createResizer(index){const resizer=document.createElement("div");let startX,startWidth,startNextWidth;return resizer.className="resizer",resizer.setAttribute("data-index",index),resizer.addEventListener("mousedown",(e=>{e.preventDefault();const table=resizer.closest(".table");startX=e.clientX,startWidth=this.columnWidths[index],startNextWidth=this.columnWidths[index+1];const onMouseMove=e=>{const widthChange=(e.clientX-startX)/table.offsetWidth*100,newWidth=startWidth+widthChange,newNextWidth=startNextWidth-widthChange;newWidth>=this.config.minColumnWidth&&newNextWidth>=this.config.minColumnWidth&&(this.columnWidths[index]=Number(newWidth.toFixed(2)),this.columnWidths[index+1]=Number(newNextWidth.toFixed(2)),this.#_updateColumnWidths(table))},onMouseUp=()=>{document.removeEventListener("mousemove",onMouseMove),document.removeEventListener("mouseup",onMouseUp)};document.addEventListener("mousemove",onMouseMove),document.addEventListener("mouseup",onMouseUp)})),resizer}#_updateColumnWidths(table){this.columnWidths.forEach(((width,index)=>{table.style.setProperty(`--column-width-${index+1}`,`${width}%`)}))}}class TypePlugin{static DEFAULT_OPERATORS=["==","!=","in"];constructor(){if(this.constructor===TypePlugin)throw new Error("TypePlugin is abstract and cannot be instantiated directly");this.name=this.constructor.name,this.operators=["==","!=","in"]}validate(value){throw new Error("validate must be implemented by subclass")}evaluate(query,dataIndexes,data,indices){throw new Error("evaluate must be implemented by subclass")}evaluateCondition(dataValue,operator,compareValue){throw new Error("evaluateCondition must be implemented by subclass")}sort(query,data){const{field:field,value:direction}=query;return[...data].sort(((a,b)=>{const comparison=String(a[field]).localeCompare(String(b[field]));return"asc"===direction?comparison:-comparison}))}checkOperator(operator){return this.operators.find((op=>op===operator))||!1}getOperatorSymbols(){return[...this.operators]}renderCell(value){const cell=document.createElement("div");return cell.innerText=String(value),cell}renderEditableCell(value,onEdit){const cell=document.createElement("div");return cell.innerHTML=String(value),cell.contentEditable=!0,cell.spellcheck=!1,cell.addEventListener("focusout",(()=>{onEdit(cell.innerText)})),cell.addEventListener("keydown",(e=>{"Enter"===e.key&&(cell.blur(),e.preventDefault())})),cell}showMore(key,element,engine,UI){const{x:x,y:y,width:width,height:height}=element.getBoundingClientRect(),typeOptions=engine.headers[key];UI.contextMenu.clear(),UI.contextMenu.button("Sort "+key+" ascending",(()=>{engine.setSort(key,"asc"),UI.render(engine.runCurrentQuery())})).button("Sort "+key+" descending",(()=>{engine.setSort(key,"desc"),UI.render(engine.runCurrentQuery())})).button("Unsort "+key,(()=>{engine.setSort(key),UI.render(engine.runCurrentQuery())})),!typeOptions.isUnique&&typeOptions.isGroupable&&UI.contextMenu.separator().button("Group by "+key,(()=>{engine.setGroup(key),UI.render(engine.runCurrentQuery())})).button("Un-group",(()=>{engine.setGroup(),UI.render(engine.runCurrentQuery())})),UI.contextMenu.showAt(x,y+height)}}class stringTypePlugin extends TypePlugin{constructor(){super(),this.operators=["%=","=%","*=","!*=","==","!=","in"]}validate(value){return"string"==typeof value}evaluate(query,dataIndexes,data,indices){if(dataIndexes&&indices&&dataIndexes.size<=indices.size)for(const index of dataIndexes.keys())this.evaluateCondition(index,query.operator,query.value)||dataIndexes.get(index).forEach((idx=>indices.delete(idx)));else for(const index of indices)this.evaluateCondition(data[index][query.field],query.operator,query.value)||indices.delete(index);return indices}evaluateCondition(dataValue,operator,value){if("in"===operator&&(value=JSON.parse(value)),Array.isArray(value)&&value.length>0&&"in"===operator)return value.includes(dataValue);switch(operator){case"==":return dataValue===value;case"!=":return dataValue!==value;case"%=":return dataValue.startsWith(value);case"=%":return dataValue.endsWith(value);case"*=":return dataValue.includes(value);case"!*=":return!dataValue.includes(value)}return!1}sort(query,data){const{field:field,value:value}=query;return data.sort(((a,b)=>"asc"===value?a[field].localeCompare(b[field]):"desc"===value?b[field].localeCompare(a[field]):void 0))}}class numberTypePlugin extends TypePlugin{constructor(){super(),this.operators=[">","<",">=","<=","==","!=","in","><"]}validate(value){return null!=value&&(!isNaN(Number(value))||2===value.split("-").length&&!isNaN(Number(value.split("-")[0]))&&!isNaN(Number(value.split("-")[1])))}evaluate(query,dataIndexes,data,indices){if(dataIndexes&&indices&&dataIndexes.size<=indices.size)for(const index of dataIndexes.keys())this.evaluateCondition(index,query.operator,query.value)||dataIndexes.get(index).forEach((idx=>indices.delete(idx)));else for(const index of indices)this.evaluateCondition(data[index][query.field],query.operator,query.value)||indices.delete(index);return indices}evaluateCondition(dataValue,operator,value){if("in"===operator?value=JSON.parse(value):"><"===operator&&(value=value.split("-")),Array.isArray(value)&&value.length>0&&"in"===operator)return value.includes(dataValue);if(Array.isArray(value)&&value.length>0&&"><"===operator){if(isNaN(value[0])||isNaN(value[1]))throw new Error("between operator requires two numbers");if(value[0]>value[1])throw new Error("between operator requires first value to be less than second value");return dataValue>=value[0]&&dataValue<=value[1]}switch(dataValue=Number(dataValue),value=Number(value),operator){case">":return dataValue>value;case"<":return dataValue<value;case">=":return dataValue>=value;case"<=":return dataValue<=value;case"==":return dataValue===value;case"!=":return dataValue!==value}}renderCell(value){const cell=document.createElement("div"),parts=value.toString().split(".");return parts[0]=parts[0].replace(/\B(?=(\d{3})+(?!\d))/g,"."),cell.textContent=parts.join(","),cell}sort(query,data){const{field:field,value:value}=query;return data.sort(((a,b)=>"asc"===value?a[field]-b[field]:"desc"===value?b[field]-a[field]:void 0))}showMore(key,element,engine,UI){const{x:x,y:y,width:width,height:height}=element.getBoundingClientRect(),typeOptions=engine.headers[key],vanTot={van:Number.MIN_SAFE_INTEGER,tot:Number.MAX_SAFE_INTEGER};UI.contextMenu.clear(),UI.contextMenu.submenu("Filter "+key,(submenu=>{var operator="==";submenu.dropdown("Filter "+key,[{label:"Gelijk aan",value:"=="},{label:"Niet gelijk aan",value:"!="},{label:"Groter dan",value:">"},{label:"Groter dan of gelijk aan",value:">="},{label:"Kleiner dan",value:"<"},{label:"Kleiner dan of gelijk aan",value:"<="},{label:"tussen",value:"><"},{label:"blank",value:"== null"},{label:"niet blank",value:"!= null"}],{value:"==",onChange:value=>{operator=value},id:"dropdown-id"}).input("Filter",{placeholder:"Filter",onChange:value=>{engine.setSelect(key,operator,value),UI.render(engine.runCurrentQuery())},showWhen:{elementId:"dropdown-id",value:["==","!=",">","<",">=","<="]}}).input("Filter",{placeholder:"Van",onChange:value=>{vanTot.van=value||Number.MIN_SAFE_INTEGER,vanTot.tot===Number.MAX_SAFE_INTEGER||vanTot.van>vanTot.tot||(engine.setSelect(key,"><",vanTot.van+"-"+vanTot.tot),UI.render(engine.runCurrentQuery()))},showWhen:{elementId:"dropdown-id",value:["><"]}}).input("Filter",{placeholder:"Tot",onChange:value=>{vanTot.tot=value||Number.MAX_SAFE_INTEGER,vanTot.van===Number.MIN_SAFE_INTEGER||vanTot.tot<=vanTot.van||(engine.setSelect(key,"><",vanTot.van+"-"+vanTot.tot),UI.render(engine.runCurrentQuery()))},showWhen:{elementId:"dropdown-id",value:["><"]}})})),UI.contextMenu.button("Sort "+key+" ascending",(()=>{engine.setSort(key,"asc"),UI.render(engine.runCurrentQuery())})).button("Sort "+key+" descending",(()=>{engine.setSort(key,"desc"),UI.render(engine.runCurrentQuery())})).button("Unsort "+key,(()=>{engine.setSort(key),UI.render(engine.runCurrentQuery())})),!typeOptions.isUnique&&typeOptions.isGroupable&&UI.contextMenu.separator().button("Group by "+key,(()=>{engine.setGroup(key),UI.render(engine.runCurrentQuery())})).button("Un-group",(()=>{engine.setGroup(),UI.render(engine.runCurrentQuery())})),UI.contextMenu.showAt(x,y+height)}}class booleanTypePlugin extends TypePlugin{constructor(){super(),this.operators=["==","!="]}validate(value){return!0===(value=Boolean(value))||!1===value}evaluate(query,dataIndexes,data,indices){if(query.value="true"===query.value,dataIndexes){const allowedValues=dataIndexes.get(query.value);return new Set([...indices].filter((idx=>allowedValues.has(idx))))}return new Set(data.map(((row,i)=>row[query.field]===query.value?i:null)).filter((x=>null!==x)))}evaluateCondition(dataValue,operator,value){return Boolean(dataValue)===Boolean(value)}sort(query,data){const{field:field,value:value}=query;return data.sort(((a,b)=>"asc"===value?a[field]-b[field]:"desc"===value?b[field]-a[field]:void 0))}renderCell(value){const cell=document.createElement("div"),checkbox=document.createElement("input");return checkbox.type="checkbox",checkbox.setAttributeNode(document.createAttribute("disabled")),value&&checkbox.setAttributeNode(document.createAttribute("checked")),checkbox.style.width="-webkit-fill-available",cell.appendChild(checkbox),cell}renderEditableCell(value,onEdit){const cell=document.createElement("div"),checkbox=document.createElement("input");return checkbox.type="checkbox",value&&checkbox.setAttributeNode(document.createAttribute("checked")),checkbox.style.width="-webkit-fill-available",checkbox.name="checkbox",checkbox.addEventListener("change",(()=>{onEdit(checkbox.checked)})),cell.appendChild(checkbox),cell}showMore(key,element,engine,UI){const{x:x,y:y,width:width,height:height}=element.getBoundingClientRect();UI.contextMenu.clear(),UI.contextMenu.button("Sort "+key+" ascending",(()=>{engine.setSort(key,"asc"),UI.render(engine.runCurrentQuery())})).button("Sort "+key+" descending",(()=>{engine.setSort(key,"desc"),UI.render(engine.runCurrentQuery())})).button("Unsort "+key,(()=>{engine.setSort(key),UI.render(engine.runCurrentQuery())})).separator().button("Only show true",(()=>{engine.addSelect(key,"==","true"),engine.removeSelect(key,"==","false"),UI.render(engine.runCurrentQuery())})).button("Only show false",(()=>{engine.addSelect(key,"==","false"),engine.removeSelect(key,"==","true"),UI.render(engine.runCurrentQuery())})).button("Show all",(()=>{engine.removeSelect(key,"==","true"),engine.removeSelect(key,"==","false"),UI.render(engine.runCurrentQuery())})).separator().button("Group by "+key,(()=>{engine.setGroup(key),UI.render(engine.runCurrentQuery())})).button("Un-group",(()=>{engine.setGroup(),UI.render(engine.runCurrentQuery())})),UI.contextMenu.showAt(x,y+height)}}class QueryParser{constructor(config){this.config={useStrictCase:config.useStrictCase||!1,SymbolsToIgnore:config.SymbolsToIgnore||[" ","_","-"]}}static QUERIES={GROUP:/group\s+(.+)/i,RANGE:/range\s+(-?\d+)-?(-?\d+)?/i,SORT:/sort\s+(.+)\s+(asc|desc)/i,SELECT:/(.+)\s+(\S+)\s+(.+)/i};parseQuery(query,plugins,headers){return query.split(/\s+and\s+|\s+&&\s+/i).map((subQuery=>this.parseSubQuery(subQuery.trim(),plugins,headers))).filter((query=>query.queryType))}parseSubQuery(subQuery,plugins,headers){if(!(subQuery=subQuery.endsWith(" and")?subQuery.slice(0,-4):subQuery)||0===subQuery.length)return{};for(const[type,regex]of Object.entries(QueryParser.QUERIES)){const match=regex.exec(subQuery);if(match)return this.parseMatch(match,type,plugins,headers)||{}}return console.warn("Invalid query: "+subQuery+"\nValid queries are: "+Object.keys(QueryParser.QUERIES).join(", ").toLowerCase()+"\nQuery: "+subQuery),{}}parseMatch(match,type,plugins,headers){if("SELECT"===type){let[_,key,operator,value]=match;key=MeantIndexKey(Object.keys(headers),key,this.config);const pluginType=headers[key].type,plugin=plugins[pluginType];if(!plugin)throw new GridError("No plugin found for header ("+pluginType+") for key ("+key+")\nDo you know certain that the name of the key is correct?");let field=key,operatorObj=plugin.checkOperator(operator);if(!operatorObj)throw new GridError(this.formatOperatorError(operator,field+" "+operator+" "+value,plugin));if(!plugin.validate(value))return;return{type:pluginType,field:field,operator:operatorObj,value:value,queryType:"SELECT"}}if("SORT"===type){let[_,key,value]=match;const pluginType=headers[key].type;if(!plugins[pluginType])throw new GridError("No plugin found for header ("+pluginType+") for key ("+key+")");return{type:pluginType,field:key,operator:"sort",value:value,queryType:"SORT"}}if("RANGE"===type){let[_,lower,upper]=match;return void 0===upper&&(upper=lower,lower=0),lower=parseInt(lower),upper=parseInt(upper),{type:"range",lower:lower,upper:upper,queryType:"RANGE"}}if("GROUP"===type){let[_,key]=match;return{type:"group",field:key,queryType:"GROUP"}}return console.warn("Invalid query: "+match+"\nValid queries are: "+Object.keys(QueryParser.QUERIES).join(", ").toLowerCase()),{}}formatOperatorError(operator,field,plugin){return["\n\nInvalid operator:    "+operator,"       For query:    "+field,"     options are:    "+plugin.getOperatorSymbols().join(", "),"\n"].join("\n")}}class SJQLEngine{constructor(engine_config,eventEmitter){this.data=[],this.headers=[],this.plugins=[],this.futureQuery=[],this.QueryParser=new QueryParser(engine_config),this.config={UseDataIndexing:engine_config.UseDataIndexing||!0,useStrictCase:engine_config.useStrictCase||!1,SymbolsToIgnore:engine_config.SymbolsToIgnore||[" ","_","-"]},this.eventEmitter=eventEmitter,this.currentQueryStr=""}createDataIndex(){this.config.UseDataIndexing&&(this.dataIndexes={},Object.keys(this.headers).forEach((header=>{this.dataIndexes[header]=new Map,this.data.forEach(((row,idx)=>{const value=row[header];this.dataIndexes[header].has(value)||this.dataIndexes[header].set(value,new Set),this.dataIndexes[header].get(value).add(idx)}))})))}autoDetectHeaders(data){for(const key of Object.keys(data))!0===data[key]||!1===data[key]?this.headers[key]={type:"boolean",isUnique:!1,isHidden:!1}:isNaN(data[key])?this.headers[key]={type:"string",isUnique:!1,isHidden:!1}:this.headers[key]={type:"number",isUnique:!1,isHidden:!1}}query(query=""){return this.data&&0!==this.data.length?query&&""!==query?this.#_query(this.QueryParser.parseQuery(query,this.plugins,this.headers)):(console.warn("No query provided, returning all data"),this.currentQueryStr="",this.data):(console.warn("No data provided, returning empty array"),[])}#_query(query){if(!query||0===query.length)return this.currentQueryStr="",console.warn("No valid query provided, returning all data"),this.data;const selectQueries=[];let sortQuery=null,rangeQuery=null,groupQuery=null;for(const q of query)switch(q.queryType){case"SELECT":selectQueries.push(q);break;case"SORT":sortQuery=q;break;case"RANGE":rangeQuery=q;break;case"GROUP":groupQuery=q}this.currentQueryStr="",selectQueries.forEach((q=>this.currentQueryStr+=q.field+" "+q.operator+" "+q.value+" and ")),sortQuery&&(this.currentQueryStr+="sort "+sortQuery.field+" "+sortQuery.value+" and "),rangeQuery&&(this.currentQueryStr+="range "+rangeQuery.lower+" "+rangeQuery.upper+" and "),groupQuery&&(this.currentQueryStr+="group "+groupQuery.field+" and "),this.currentQueryStr=this.currentQueryStr.slice(0,-5);let log="";selectQueries.length>0&&(log+="SELECT queries: "+selectQueries.map((q=>q.field+" "+q.operator+" "+q.value)).join(", ")+"\n"),sortQuery&&(log+="SORT query: "+sortQuery.field+" "+sortQuery.value+"\n"),rangeQuery&&(log+="RANGE query: "+rangeQuery.lower+" "+rangeQuery.upper+"\n"),groupQuery&&(log+="GROUP query: "+groupQuery.field+"\n"),log+=this.currentQueryStr;let validIndices=new Set(this.data.keys()),groupedData=null;for(const q of selectQueries){q.field=MeantIndexKey(Object.keys(this.data[0]),q.field,this.config);const plugin=this.getPlugin(q.type);if(!plugin)throw new GridError(`No plugin found for header (${q.type}) for key (${q.field})`);validIndices=plugin.evaluate(q,this.dataIndexes[q.field],this.data,validIndices)}if(rangeQuery){const first=validIndices.values().next().value,lower=Math.max(0,first+rangeQuery.lower),upper=Math.min(this.data.length-1,first+rangeQuery.upper-1);validIndices=new Set(Array.from({length:upper-lower+1},((_,i)=>i+lower)))}if(groupQuery){const groupField=MeantIndexKey(Object.keys(this.data[0]),groupQuery.field,this.config);groupedData={};for(const index of validIndices){const row=this.data[index],groupKey=row[groupField];(groupedData[groupKey]||=[]).push(row)}return sortQuery&&console.warn("Sorting grouped data is not yet supported"),groupedData}if(sortQuery){const sortedData=this.data.filter(((_,i)=>validIndices.has(i)));return this.getPlugin(sortQuery.type).sort(sortQuery,sortedData)}return this.data.filter(((_,i)=>validIndices.has(i)))}addSelect(key,operator,value){if(!key||!operator||void 0===value)return;const newClause=`${key} ${operator} ${value}`;0===this.currentQueryStr.length?this.currentQueryStr=newClause:this.currentQueryStr+=`and ${newClause}`}setSelect(key,operator,value){this.removeSelect(key),this.addSelect(key,operator,value)}removeSelect(key,operator,value){if(void 0!==key&&void 0===operator&&void 0===value)this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith(key))).join(" and ");else if(void 0!==key&&void 0!==operator&&void 0===value)this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith(`${key} ${operator}`))).join(" and ");else if(void 0!==key&&void 0!==operator&&void 0!==value){const clauseToRemove=`${key} ${operator} ${value}`;this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>clause.trim()!==clauseToRemove)).join(" and ")}}setSort(key,direction){if(void 0===key||void 0===direction)return void this.removeSort();const newClause=`sort ${key} ${direction}`;this.removeSort(),0===this.currentQueryStr.length?this.currentQueryStr=newClause:this.currentQueryStr+=` and ${newClause}`}removeSort(){this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith("sort"))).join(" and ")}setRange(lower,upper){if(void 0===lower||void 0===upper)return void this.removeRange();const newClause=`range ${lower} ${upper}`;this.removeRange(),0===this.currentQueryStr.length?this.currentQueryStr=newClause:this.currentQueryStr+=` and ${newClause}`}removeRange(){this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith("range"))).join(" and ")}setGroup(key){if(void 0===key)return void this.removeGroup();const newClause=`group ${key}`;this.removeGroup(),0===this.currentQueryStr.length?this.currentQueryStr=newClause:this.currentQueryStr+=` and ${newClause}`}removeGroup(){this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith("group"))).join(" and ")}runCurrentQuery(){return grid.eventEmitter.emit("dg-query-update",grid.engine.currentQueryStr),this.query(this.currentQueryStr)}addPlugin(plugin,dontOverride=!1){if(!(plugin instanceof TypePlugin))throw new GridError("Plugin must extend TypePlugin");const existingPlugin=this.getPlugin(plugin.name,!0);dontOverride&&existingPlugin||(existingPlugin&&!dontOverride?(console.warn("Plugin already exists, removing the old plugin"),this.plugins[plugin.name.replace("TypePlugin","")]=plugin):this.plugins[plugin.name.replace("TypePlugin","")]=plugin)}getPlugin(name,justChecking=!1){if(!name)throw new GridError("Plugin name not provided");if("string"!=typeof name)return!1;const plugin=this.plugins[name.replace("TypePlugin","")];if(!plugin&&!justChecking)throw new GridError("Plugin not found: "+name);return!(!plugin&&justChecking)&&plugin}importData(data,config){if(this.data&&this.data.length>0)throw new GridError("Data already imported, re-importing data is not (yet) supported");if("json"===config.type)this.#parseJsonData(data,config);else{if("csv"!==config.type)throw new GridError("Invalid data type");this.#parseCSVData(data,config)}0===Object.keys(this.headers).length&&(console.warn("No headers provided, auto detecting headers, please provide so the system can you more optimal plugins"),this.autoDetectHeaders(this.data[0]))}#parseJsonData(data,config){if("string"!=typeof data)throw new GridError("Data must be a string (raw JSON)");if(data=JSON.parse(data),!Array.isArray(data))throw new GridError("Data must be an array");if(0===data.length)return console.warn("No data provided"),[];this.data=data.map(((item,index)=>{const newItem={};newItem.internal_id=index;for(const key of Object.keys(item))newItem[key]=item[key];return newItem}))}#parseCSVData(data,config){const lines=data.split("\n"),headers=lines[0].split(",").map((header=>header.replace(/"/g,"").replace(" ","_").replace("\r","")));this.data=lines.slice(1).map(((line,index)=>{const values=line.split(/(?!"[a-zA-z0-9\s.()]*)(?:,|,"|",)(?![a-zA-z0-9\s.()]*")/gim),newItem={};return newItem.internal_id=index,headers.forEach(((header,i)=>{"string"==typeof values[i]&&(values[i].endsWith('"')?values[i]=values[i].slice(0,-1):values[i]),newItem[header]=values[i]})),newItem})).slice(0,-1)}}class EventEmitter{constructor(){this.events={}}subscribe(event,listener){return this.events[event.toLocaleLowerCase()]||(this.events[event.toLocaleLowerCase()]=[]),this.events[event.toLocaleLowerCase()].push(listener),()=>this.unsubscribe(event,listener)}on=this.subscribe;unsubscribe(event,listenerToRemove){this.events[event.toLocaleLowerCase()]&&(this.events[event.toLocaleLowerCase()]=this.events[event.toLocaleLowerCase()].filter((listener=>listener!==listenerToRemove)))}off=this.unsubscribe;emit(event,data){this.events[event.toLocaleLowerCase()]&&this.events[event.toLocaleLowerCase()].forEach((listener=>listener(data)))}}class KeyboardShortcuts{
/**
     * Initializes the KeyboardShortcuts instance and binds the event listener.
     *
     * @example
     * const shortcuts = new KeyboardShortcuts();
     * shortcuts.addShortcut('ctrl+s', event => console.log('Save'));
     * shortcuts.addShortcut('ctrl+z', event => console.log('Undo'));
     * shortcuts.addShortcut('ctrl+y', event => console.log('Redo'));
     *
     * shortcuts.listShortcuts(); // ['ctrl+s', 'ctrl+z', 'ctrl+y']
     *
     * shortcuts.removeShortcut('ctrl+z');
     * shortcuts.clearShortcuts();
     *
     * shortcuts.destroy();
     * @preserve
     */
constructor(){this.shortcuts=new Map,this.listener=this.#_handleKeyPress.bind(this),document.addEventListener("keydown",this.listener)}
/**
     * Normalizes a key string by converting it to lowercase and removing whitespace.
     * @param {string} key - The key string to normalize.
     * @returns {string} The normalized key string.
     * @preserve
     */#_normalizeKey(key){return key.toLowerCase().replace(/\s+/g,"")}
/**
     * Handles the keydown event and executes the corresponding shortcut callback if available.
     * This also prevents the default browser behavior for the shortcut key combination.
     * @param {KeyboardEvent} event - The keydown event.
     * @preserve
     */#_handleKeyPress(event){const pressedKey=this.#_normalizeKey(`${event.ctrlKey?"ctrl+":""}${event.shiftKey?"shift+":""}${event.altKey?"alt+":""}${event.metaKey?"meta+":""}${event.key}`),callback=this.shortcuts.get(pressedKey);callback&&(event.preventDefault(),callback(event))}
/**
     * Adds a new keyboard shortcut.
     * @param {string} keys - The key combination for the shortcut (e.g., "ctrl+s").
     * @param {Function} callback - The function to execute when the shortcut is triggered.
     * @preserve
     */addShortcut(keys,callback){const normalizedKeys=this.#_normalizeKey(keys);this.shortcuts.has(normalizedKeys)?console.warn(`Shortcut '${keys}' is already assigned.`):this.shortcuts.set(normalizedKeys,callback)}
/**
     * Removes an existing keyboard shortcut.
     * @param {string} keys - The key combination of the shortcut to remove.
     * @preserve
     */removeShortcut(keys){const normalizedKeys=this.#_normalizeKey(keys);this.shortcuts.has(normalizedKeys)?this.shortcuts.delete(normalizedKeys):console.warn(`Shortcut '${keys}' does not exist.`)}
/**
     * Lists all registered keyboard shortcuts.
     * @returns {string[]} An array of registered key combinations.
     * @preserve
     */listShortcuts(){return Array.from(this.shortcuts.keys())}
/**
     * Clears all registered keyboard shortcuts.
     * @preserve
     */clearShortcuts(){this.shortcuts.clear()}
/**
     * Destroys the KeyboardShortcuts instance by removing the event listener and clearing shortcuts.
     * @preserve
     */destroy(){document.removeEventListener("keydown",this.listener),this.clearShortcuts()}}class GridError extends Error{constructor(message){super(message),this.name="GridError",this.stack=""}}function FastHash(object){const string=JSON.stringify(object);let hash=0;for(let i=0;i<string.length;i++)hash=(hash<<5)-hash+string.charCodeAt(i),hash|=0;return hash}function MeantIndexKey(dataIndexesKeys,field,config){return dataIndexesKeys.find((key=>{let normalizedKey="",normalizedField="";return config.SymbolsToIgnore.length?(normalizedKey=key.replace(new RegExp(`[${config.SymbolsToIgnore.join("")}]`,"g"),""),normalizedField=field.replace(new RegExp(`[${config.SymbolsToIgnore.join("")}]`,"g"),"")):(normalizedKey=key,normalizedField=field),config.useStrictCase||(normalizedKey=normalizedKey.toLowerCase(),normalizedField=normalizedField.toLowerCase()),normalizedKey===normalizedField}))}function firstItem(data){if(!data||"object"!=typeof data)return!1;if(Array.isArray(data))return data[0];return data[Object.keys(data)[0]]}async function waitState(){return new Promise((resolve=>{let timerId=setInterval((function(){1==o.state&&(clearInterval(timerId),resolve(o.state))}),1e3)}))}Array.prototype.remove=function(entry){const index=this.indexOf(entry);return index>-1&&this.splice(index,1),this};class ContextMenu{static ITEM_TYPES={BUTTON:"button",SEPARATOR:"separator",SUBMENU:"submenu",INPUT:"input",DROPDOWN:"dropdown",CHECKBOX:"checkbox",RADIO:"radio",SEARCH_SELECT:"search-select"};static CLASSNAMES={BUTTON:"context-menu-button",SUBMENU:"context-menu-submenu",SEPARATOR:"context-menu-separator",MENU:"context-menu",INPUT:"context-menu-input",DROPDOWN:"context-menu-dropdown",CHECKBOX:"context-menu-checkbox",RADIO:"context-menu-radio",CONTAINER:"context-menu-container",SEARCH_SELECT:"context-menu-search-select",ICON:"context-menu-icon",LABEL:"context-menu-label"};constructor(options={}){this.options={width:options.width||200,animation:{enabled:options.animation?.enabled??!0,duration:options.animation?.duration||200,timing:options.animation?.timing||"ease-out"},position:{xOffset:options.position?.xOffset||0,yOffset:options.position?.yOffset||0},icons:options.icons||{submenu:"❯"},style:{backgroundColor:options.style?.backgroundColor||"#ffffff",textColor:options.style?.textColor||"#333333",backgroundHoverColor:options.style?.backgroundHoverColor||"#f0f0f0",border:options.style?.border||"rgba(0, 0, 0, 0.08)",shadow:options.style?.shadow||"0 10px 25px rgba(0, 0, 0, 0.1)",accent:options.style?.accent||"#3b82f6",separator:options.style?.separator||"rgba(0, 0, 0, 0.08)",padding:options.style?.padding||"10px",paddingHorizontal:options.style?.paddingHorizontal||"15px",gap:options.style?.gap||"10px",borderRadius:options.style?.borderRadius||"8px",borderRadiusInput:options.style?.borderRadiusInput||"4px",fontSize:options.style?.fontSize||"14px",transition:options.style?.transition||"0.2s",transitionFast:options.style?.transitionFast||"0.1s",transitionInput:options.style?.transitionInput||"0.2s"},indentLevel:options.indentLevel||0,isRoot:void 0===options.isRoot,closeOnClick:options.closeOnClick,closeOnOutsideClick:options.closeOnOutsideClick},this.items=[],this.id=this._generateId(),this.installStyles()}addItem(type,config){const item={id:(config?.id??this._generateId())+"",type:type,position:this.items.length,...config};return void 0===item.id&&(item.id=this._generateId()),item.type===ContextMenu.ITEM_TYPES.SUBMENU&&(item.submenu.options.indentLevel=(this.options.indentLevel||0)+1),this._validateItem(item),this.items.push(item),this}button(text,action,config={}){return this.addItem(ContextMenu.ITEM_TYPES.BUTTON,{text:text,action:action,icon:config.icon,ficon:config.ficon,disabled:config.disabled,marked:config.marked,showWhen:config.showWhen,id:config.id})}input(label,config={}){return this.addItem(ContextMenu.ITEM_TYPES.INPUT,{label:label,placeholder:config.placeholder,value:config.value,onChange:config.onChange,showWhen:config.showWhen,id:config.id})}dropdown(label,options,config={}){return this.addItem(ContextMenu.ITEM_TYPES.DROPDOWN,{label:label,options:options,value:config.value,onChange:config.onChange,multiSelect:config.multiSelect,showWhen:config.showWhen,id:config.id})}checkbox(text,config={}){return this.addItem(ContextMenu.ITEM_TYPES.CHECKBOX,{text:text,checked:config.checked||!1,onChange:config.onChange,showWhen:config.showWhen,id:config.id})}radioGroup(name,options,config={}){return options.forEach((option=>{this.addItem(ContextMenu.ITEM_TYPES.RADIO,{label:option.label,value:option.value,name:name,checked:option.checked,onChange:config.onChange,showWhen:config.showWhen,id:config.id})})),this}separator(){return this.addItem(ContextMenu.ITEM_TYPES.SEPARATOR,{})}submenu(text,submenuBuilder,config={}){const options={...this.options,isRoot:!1,indentLevel:(this.options.indentLevel||0)+1,showWhen:config.showWhen,id:config.id},submenu=new ContextMenu(options);submenuBuilder(submenu);const items=this.addItem(ContextMenu.ITEM_TYPES.SUBMENU,{text:text,submenu:submenu,icon:config.icon,ficon:config.ficon,showWhen:config.showWhen,id:config.id}).items;return items[items.length-1].id=submenu.id,this}searchSelect(label,options,config={}){return this.addItem(ContextMenu.ITEM_TYPES.SEARCH_SELECT,{label:label,options:options,value:config.value,onChange:config.onChange,showWhen:config.showWhen,id:config.id})}showAt(x,y,autoAdd=!0){const menu=this._render();return document.getElementById(this.id)&&document.getElementById(this.id).remove(),autoAdd&&document.body.appendChild(menu),this._setupEventHandlers(menu),this._positionMenu(menu,{x:x,y:y,position:"fixed"}),this._animateIn(menu),menu}destroy(){const menu=document.querySelector("body > ."+ContextMenu.CLASSNAMES.MENU);menu&&menu.remove();const{handleClick:handleClick,handleContextMenu:handleContextMenu,handleMouseOver:handleMouseOver}=this._eventHandlers||{};handleClick&&document.removeEventListener("click",handleClick),handleContextMenu&&document.removeEventListener("contextmenu",handleContextMenu),handleMouseOver&&document.removeEventListener("mouseover",handleMouseOver),this?.clear()}clear(){this.items=[];const menu=document.getElementById(this.id);menu&&(menu.innerHTML="")}_setupEventHandlers(menu){const handleMouseLeave=event=>{const target=event.target;if(target.className===ContextMenu.CLASSNAMES.MENU)return void target.remove();const submenu=document.getElementById(target.dataset?.submenuId),isMouseOverButton=target.matches(":hover"),isMouseOverSubmenu=submenu?.matches(":hover");isMouseOverButton||isMouseOverSubmenu||submenu?.remove()};menu.addEventListener("click",(e=>{if(!(e.target.classList.contains(ContextMenu.CLASSNAMES.DROPDOWN)||e.target.classList.contains(ContextMenu.CLASSNAMES.INPUT)||e.target.classList.contains(ContextMenu.CLASSNAMES.CHECKBOX)||e.target.classList.contains(ContextMenu.CLASSNAMES.RADIO)||e.target.classList.contains(ContextMenu.CLASSNAMES.SEARCH_SELECT))){if(e.target.classList.contains(ContextMenu.CLASSNAMES.BUTTON)){const button=this.items.find((item=>item.id===e.target.id));button&&(button.action(),this.destroy())}if(!e.target.closest("."+ContextMenu.CLASSNAMES.MENU)){if(!this.options.closeOnOutsideClick)return;this.destroy()}}})),menu.addEventListener("mouseover",(e=>{if(e.target.classList.contains(ContextMenu.CLASSNAMES.SUBMENU)){const submenu=this.items.find((item=>item.id===e.target.dataset.submenuId));if(submenu){if(e.target.parentElement.querySelector("#"+submenu.submenu.id))return;const htmlElement=submenu.submenu._render();submenu.submenu._setupEventHandlers(htmlElement),submenu.submenu._positionMenu(htmlElement,{x:e.target.getBoundingClientRect().right,y:e.target.getBoundingClientRect().top}),htmlElement.style.position="absolute",htmlElement.style.left=this.options.width+"px",htmlElement.style.top=e.target.getBoundingClientRect().top-e.target.parentElement.getBoundingClientRect().top+"px",e.target.parentElement.appendChild(htmlElement),htmlElement.addEventListener("mouseleave",handleMouseLeave),e.target.addEventListener("mouseleave",handleMouseLeave)}}})),addEventListener("click",(e=>{e.target.closest("."+ContextMenu.CLASSNAMES.MENU)||this.options.closeOnOutsideClick&&this.destroy()}))}_validateItem(item){const validTypes=Object.values(ContextMenu.ITEM_TYPES);if(!item.type||!validTypes.includes(item.type))throw new Error(`Invalid item type: ${item.type}. Allowed types are: ${validTypes.join(", ")}`);switch(item.type){case ContextMenu.ITEM_TYPES.BUTTON:if(!item.text||"string"!=typeof item.text)throw new Error('Button item must have a "text" property of type string.');if(item.action&&"function"!=typeof item.action)throw new Error("Button item action must be a function.");break;case ContextMenu.ITEM_TYPES.SEPARATOR:break;case ContextMenu.ITEM_TYPES.SUBMENU:if(!(item.submenu&&item.submenu instanceof ContextMenu))throw new Error('Submenu item must have a "submenu" property that is an instance of ContextMenu.');break;case ContextMenu.ITEM_TYPES.INPUT:if(!item.label||"string"!=typeof item.label)throw new Error('Input item must have a "label" property of type string.');break;case ContextMenu.ITEM_TYPES.DROPDOWN:if(!item.label||"string"!=typeof item.label)throw new Error('Dropdown item must have a "label" property of type string.');if(!Array.isArray(item.options)||0===item.options.length)throw new Error('Dropdown item must have a non-empty "options" array.');break;case ContextMenu.ITEM_TYPES.CHECKBOX:if(!item.text||"string"!=typeof item.text)throw new Error('Checkbox item must have a "text" property of type string.');if("boolean"!=typeof item.checked)throw new Error('Checkbox item must have a "checked" property of type boolean.');break;case ContextMenu.ITEM_TYPES.RADIO:if(!item.label||"string"!=typeof item.label)throw new Error('Radio item must have a "label" property of type string.');if(!item.name||"string"!=typeof item.name)throw new Error('Radio item must have a "name" property of type string.');break;case ContextMenu.ITEM_TYPES.SEARCH_SELECT:if(!item.label||"string"!=typeof item.label)throw new Error('SearchSelect item must have a "label" property of type string.');if(!Array.isArray(item.options)||0===item.options.length)throw new Error('SearchSelect item must have a non-empty "options" array.');break;default:throw new Error(`Unhandled item type: ${item.type}`)}}_generateId(){return"_"+Math.random().toString(36).substring(2,9)}_render(){const menuContainer=document.createElement("div");return menuContainer.classList.add(ContextMenu.CLASSNAMES.MENU),menuContainer.id=this.id,menuContainer.setAttribute("role","menu"),menuContainer.setAttribute("aria-orientation","vertical"),menuContainer.style.width=`${this.options.width}px`,menuContainer.dataset.indent=this.options.indentLevel,this.items.forEach((item=>{let element;switch(item.type){case ContextMenu.ITEM_TYPES.BUTTON:element=this._createButton(item);break;case ContextMenu.ITEM_TYPES.SEPARATOR:element=this._createSeparator();break;case ContextMenu.ITEM_TYPES.SUBMENU:element=this._createSubmenu(item);break;case ContextMenu.ITEM_TYPES.INPUT:element=this._createInput(item);break;case ContextMenu.ITEM_TYPES.DROPDOWN:element=this._createDropdown(item);break;case ContextMenu.ITEM_TYPES.CHECKBOX:element=this._createCheckbox(item);break;case ContextMenu.ITEM_TYPES.RADIO:element=this._createRadio(item);break;case ContextMenu.ITEM_TYPES.SEARCH_SELECT:element=this._createSearchSelect(item);break;default:console.warn(`Unknown item type: ${item.type}`)}element&&menuContainer.appendChild(element),setTimeout((()=>{if(item.showWhen){const{elementId:elementId,value:value}=item.showWhen,controllingElement=document.querySelector("#"+elementId);if(controllingElement){const toggleVisibility=()=>{const shouldShow=value.includes(controllingElement.value);element.style.display=shouldShow?"block":"none"};controllingElement.addEventListener("input",toggleVisibility),controllingElement.addEventListener("change",toggleVisibility),toggleVisibility()}}}),0)})),menuContainer}_createButton(item){const button=document.createElement("button");if(button.classList.add(ContextMenu.CLASSNAMES.BUTTON),button.id=item.id,button.innerText=item.text,button.disabled=item.disabled||!1,button.dataset.marked=item.marked||!1,item.icon){const icon=document.createElement("span");icon.innerText=item.icon,button.prepend(icon)}if(item.ficon){const ficon=document.createElement("i");ficon.className=item.ficon,button.append(ficon)}return button}_createSeparator(){const separator=document.createElement("div");return separator.classList.add(ContextMenu.CLASSNAMES.SEPARATOR),separator}_createSubmenu(item){const submenuButton=document.createElement("button");if(submenuButton.classList.add(ContextMenu.CLASSNAMES.SUBMENU),submenuButton.innerText=item.text,submenuButton.setAttribute("aria-haspopup","true"),submenuButton.dataset.submenuId=item.id,item.icon){const icon=document.createElement("span");icon.innerText=item.icon,submenuButton.prepend(icon)}const moreIcon=document.createElement("span");if(moreIcon.innerText=this.options.icons.submenu,moreIcon.style.marginLeft="auto",submenuButton.append(moreIcon),item.ficon){const ficon=document.createElement("i");ficon.className=item.ficon,submenuButton.append(ficon)}return submenuButton}_createInput(item){const inputContainer=document.createElement("div");inputContainer.classList.add(ContextMenu.CLASSNAMES.INPUT);const input=document.createElement("input");return input.type=item.type||"text",input.placeholder=item.placeholder||"",input.value=item.value||"",input.oninput=e=>item.onChange?.(e.target.value),input.id=item.id,inputContainer.appendChild(input),inputContainer}_createDropdown(item){const select=document.createElement("select");return select.classList.add(ContextMenu.CLASSNAMES.DROPDOWN),select.id=item.id,item.options.forEach((option=>{const opt=document.createElement("option");opt.value=option.value,opt.textContent=option.label,option.value===item.value&&(opt.selected=!0),select.appendChild(opt)})),select.onchange=e=>item.onChange?.(e.target.value),select}_createCheckbox(item){const label=document.createElement("label");label.classList.add(ContextMenu.CLASSNAMES.CHECKBOX);const checkbox=document.createElement("input");checkbox.type="checkbox",checkbox.checked=item.checked||!1,checkbox.onchange=e=>item.onChange?.(e.target.checked),checkbox.id=item.id;const span=document.createElement("span");return span.textContent=item.text,label.appendChild(checkbox),label.appendChild(span),label}_createRadio(item){const label=document.createElement("label");label.classList.add(ContextMenu.CLASSNAMES.RADIO);const radio=document.createElement("input");radio.type="radio",radio.name=item.name,radio.value=item.value,radio.checked=item.checked||!1,radio.onchange=e=>item.onChange?.(e.target.value),radio.id=item.id;const span=document.createElement("span");return span.textContent=item.label,label.appendChild(radio),label.appendChild(span),label}_createSearchSelect(item){const container=document.createElement("div");container.classList.add(ContextMenu.CLASSNAMES.SEARCH_SELECT),container.id=item.id;const input=document.createElement("input");input.type="text",input.placeholder=item.label||"";const list=document.createElement("div");list.classList.add(ContextMenu.CLASSNAMES.SEARCH_SELECT+"-list");const selectAll=document.createElement("label");selectAll.classList.add(ContextMenu.CLASSNAMES.SEARCH_SELECT+"-select-all");const selectAllCheckbox=document.createElement("input");selectAllCheckbox.type="checkbox",selectAllCheckbox.onchange=e=>{list.querySelectorAll('input[type="checkbox"]').forEach((checkbox=>{checkbox.checked=e.target.checked}));const selectedValues=Array.from(list.querySelectorAll('input[type="checkbox"]:checked')).map((cb=>cb.value));item.onChange?.(selectedValues),container.value=selectedValues};const selectAllLabel=document.createElement("span");return selectAllLabel.textContent="Select All",selectAll.appendChild(selectAllCheckbox),selectAll.appendChild(selectAllLabel),list.appendChild(selectAll),item.options.forEach((option=>{const checkbox=document.createElement("input");checkbox.type="checkbox",checkbox.value=option.value,checkbox.checked=option.checked||!1,checkbox.onchange=()=>{const selectedValues=Array.from(list.querySelectorAll('input[type="checkbox"]:checked')).map((cb=>cb.value));item.onChange?.(selectedValues),container.value=selectedValues};const label=document.createElement("label");label.textContent=option.label,label.appendChild(checkbox),list.appendChild(label)})),container.appendChild(input),container.appendChild(list),input.oninput=e=>{const searchValue=e.target.value.toLowerCase();list.querySelectorAll("label").forEach((item=>{const text=item.textContent.toLowerCase();item.style.display=text.includes(searchValue)?"block":"none"}))},container}_positionMenu(menu,position){const{x:x,y:y}=position,{xOffset:xOffset,yOffset:yOffset}=this.options.position;menu.style.left=`${x+xOffset||this.options.width}px`,menu.style.top=`${y+yOffset}px`,menu.style.position="fixed"}_animateIn(menu){this.options.animation.enabled&&(menu.style.opacity=0,menu.style.transform="scale(0.9)",menu.style.transition=`opacity ${this.options.animation.duration}ms ${this.options.animation.timing}, \n                             transform ${this.options.animation.duration}ms ${this.options.animation.timing}`,requestAnimationFrame((()=>{menu.style.opacity=1,menu.style.transform="scale(1)"})))}installStyles(){if(document.getElementById("context-menu-styles"))return;const styleElement=document.createElement("style");styleElement.id="context-menu-styles",styleElement.textContent="\n:root {\n  --context-menu-bg: "+(this.options.style.backgroundColor||"#ffffff")+";\n  --context-menu-text: "+(this.options.style.textColor||"#333333")+";\n  --context-menu-hover-bg: "+(this.options.style.backgroundHoverColor||"#f0f0f0")+";\n  --context-menu-border: "+(this.options.style.border||"rgba(0, 0, 0, 0.08)")+";\n  --context-menu-shadow: "+(this.options.style.shadow||"0 10px 25px rgba(0, 0, 0, 0.1)")+";\n  --context-menu-accent: "+(this.options.style.accent||"#3b82f6")+";\n  --context-menu-separator: "+(this.options.style.separator||"rgba(0, 0, 0, 0.08)")+";\n  --padding: "+(this.options.style.padding||"10px")+";\n  --padding-horizontal: "+(this.options.style.paddingHorizontal||"15px")+";\n  --gap: "+(this.options.style.gap||"10px")+";\n  --border-radius: "+(this.options.style.borderRadius||"8px")+";\n  --border-radius-input: "+(this.options.style.borderRadiusInput||"4px")+";\n  --font-size: "+(this.options.style.fontSize||"14px")+";\n  --transition: "+(this.options.style.transition||"0.2s")+" ease;\n  --transition-fast: "+(this.options.style.transitionFast||"0.1s")+" ease;\n  --transition-input: "+(this.options.style.transitionInput||"0.2s")+" ease;\n}\n\n.context-menu {\n  background: var(--context-menu-bg);\n  border: 1px solid var(--context-menu-border);\n  border-radius: var(--border-radius);\n  box-shadow: var(--context-menu-shadow);\n  padding: var(--padding) 0;\n  min-width: 220px;\n  z-index: 1000;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  color: var(--context-menu-text);\n  animation: contextMenuSlideIn var(--transition-fast) forwards;\n  transform-origin: top center;\n}\n\n.context-menu:has(> .context-menu-dropdown)::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 500%;\n    z-index: -1;\n}\n\n.context-menu-button,\n.context-menu-submenu {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: calc(var(--padding) + 2px) var(--padding-horizontal);\n  border: none;\n  background: none;\n  font-size: var(--font-size);\n  text-align: left;\n  cursor: pointer;\n  color: var(--context-menu-text);\n  transition: background-color var(--transition-fast), color var(--transition-fast);\n  position: relative;\n  gap: var(--gap);\n}\n\n.context-menu-button:disabled {\n  color: rgba(26, 26, 26, 0.4);\n  cursor: not-allowed;\n}\n\n.context-menu-button[data-marked=\"true\"] {\n  font-weight: bold;\n  background-color: var(--context-menu-accent);\n  color: white;\n  border-radius: calc(var(--border-radius) / 2);\n  border: 1px solid var(--context-menu-accent);\n}\n\n.context-menu-button[data-marked=\"true\"]:hover {\n  background-color: var(--context-menu-accent);\n  color: white;\n}\n\n.context-menu-button span,\n.context-menu-submenu span {\n  display: flex;\n  align-items: center;\n  pointer-events: none;\n}\n\n.context-menu-button:hover,\n.context-menu-submenu:hover {\n  background-color: var(--context-menu-hover-bg);\n}\n\n.context-menu-button:focus,\n.context-menu-submenu:focus {\n  outline: none;\n  background-color: var(--context-menu-hover-bg);\n}\n\n.context-menu-separator {\n  height: 1px;\n  background-color: var(--context-menu-separator);\n  margin: var(--padding) 0;\n}\n\n.context-menu-input {\n  padding: var(--padding) var(--padding-horizontal);\n}\n\n.context-menu-input input {\n  width: calc(100% - var(--padding-horizontal));\n  padding: var(--padding);\n  border: 1px solid var(--context-menu-border);\n  border-radius: var(--border-radius-input);\n  font-size: var(--font-size);\n  background-color: #f9fafb;\n  transition: border-color var(--transition-input), box-shadow var(--transition-input);\n}\n\n.context-menu-input input:focus {\n  outline: none;\n  border-color: var(--context-menu-accent);\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);\n}\n\n.context-menu-dropdown {\n  width: calc(100% - calc(var(--padding-horizontal) * 2));\n  margin: var(--padding) var(--padding-horizontal);\n  padding: var(--padding);\n  border: 1px solid var(--context-menu-border);\n  border-radius: var(--border-radius-input);\n  font-size: var(--font-size);\n  background-color: #f9fafb;\n  transition: border-color var(--transition-input), box-shadow var(--transition-input);\n}\n\n.context-menu-checkbox,\n.context-menu-radio {\n  display: flex;\n  align-items: center;\n  padding: calc(var(--padding) + 2px) var(--padding-horizontal);\n  font-size: var(--font-size);\n  cursor: pointer;\n  transition: background-color var(--transition-fast);\n}\n\n.context-menu-checkbox:hover,\n.context-menu-radio:hover {\n  background-color: var(--context-menu-hover-bg);\n}\n\n.context-menu-checkbox input,\n.context-menu-radio input {\n  margin-right: var(--gap);\n  accent-color: var(--context-menu-accent);\n}\n\n.context-menu-checkbox input:focus,\n.context-menu-radio input:focus {\n  outline: none;\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);\n}\n\n.context-menu-checkbox input:checked,\n.context-menu-radio input:checked {\n  background-color: var(--context-menu-accent);\n}\n\n.context-menu-search-select {\n  display: flex;\n  flex-direction: column;\n  padding: calc(var(--padding) + 2px) var(--padding-horizontal);\n}\n\n.context-menu-search-select input {\n  padding: var(--padding);\n  border: 1px solid var(--context-menu-border);\n  border-radius: var(--border-radius-input);\n  font-size: var(--font-size);\n  background-color: #f9fafb;\n  transition: border-color var(--transition-input), box-shadow var(--transition-input);\n}\n\n.context-menu-search-select input:focus {\n  outline: none;\n  border-color: var(--context-menu-accent);\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);\n}\n\n.context-menu-search-select-list {\n  max-height: 200px;\n  overflow-y: auto;\n  margin-top: var(--padding);\n}\n\n.context-menu-search-select-list label {\n  display: flex;\n  flex-direction: row-reverse;\n  gap: var(--gap);\n  align-items: center;\n  padding: var(--padding) 0;\n  justify-content: flex-end;\n}\n\n.context-menu-search-select-list label:hover {\n  background-color: var(--context-menu-hover-bg);\n}\n\n.context-menu-search-select-list input {\n  margin-right: var(--gap);\n  accent-color: var(--context-menu-accent);\n}\n\n.context-menu-search-select-list input:focus {\n  outline: none;\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);\n}\n\n.context-menu-submenu {\n  position: relative;\n}\n\n/* Animation */\n@keyframes contextMenuSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(calc(-1 * var(--padding)));\n  }\n}\n\n/* Focus and Accessibility */\n.context-menu:focus {\n  outline: none;\n}\n\n.context-menu-button:focus-visible,\n.context-menu-submenu:focus-visible {\n  outline: 2px solid var(--context-menu-accent);\n  outline-offset: -2px;\n}\n",document.head.appendChild(styleElement)}}
//# sourceMappingURL=DynamicGrid.min.js.map