/**
 * DynamicGrid is a library for rendering data in a grid format with dynamic querying capabilities.
 * @license MIT
 */
class DynamicGrid{constructor(config){if(this.eventEmitter=new EventEmitter,this.keyboardShortcuts=new KeyboardShortcuts,this.engine=new SJQLEngine(config.engine||{},this.eventEmitter),this.engine.plugins=config.plugins??[],this.engine.addPlugin(new stringTypePlugin,!0),this.engine.addPlugin(new numberTypePlugin,!0),this.engine.addPlugin(new booleanTypePlugin,!0),this.engine.addPlugin(new dateTypePlugin,!0),this.engine.connectors=config.connectors||[],this.engine.addConnector(new CSVExportConnector,!0),this.engine.addConnector(new XLSXExportConnector,!0),this.engine.addConnector(new JSONExportConnector,!0),this.engine.addConnector(new XMLExportConnector,!0),this.engine.addConnector(new HTMLExportConnector,!0),this.engine.addConnector(new TXTExportConnector,!0),config.headers&&Object.entries(config.headers).forEach((([key,value])=>{this.engine.headers[key]="string"==typeof value?{type:value,isUnique:!1,isGroupable:!0,isHidden:!1,isEditable:!0}:{type:value.type||key,isUnique:value.isUnique||!1,isGroupable:void 0===value.isGroupable||value.isGroupable,isHidden:value.isHidden||!1,isEditable:void 0===value.isEditable||value.isEditable}})),this.virtualScrolling=config.ui.virtualScrolling??!0,this.rowHeight=config.ui.rowHeight||40,this.visibleRows=config.ui.visibleRows||20,this.ui=new DynamicGridUI(this,config.ui,this.eventEmitter),config.APIConnector&&config.APIConnector.connector){const APIconfig=config.APIConnector;this.APIConnector=new config.APIConnector.connector(this,APIconfig),delete APIconfig.connector,this.APIConnector.fetchData().then((data=>{this.importData(data,{type:"json"}),this.render()}))}this.eventEmitter.emit("grid-initialized",{config:config})}
/**
     * Imports data into the engine and creates a data index.
     * @param {string|object} data - The data to import.
     * @param {Object} [config] - The configuration for importing data.
     * @preserve
     */importData(data,config){this.engine.importData(data,config),this.engine.createDataIndex(),this.eventEmitter.emit("grid-data-imported",{data:data,config:config})}
/**
     * Renders the UI based on the provided input.
     * @param {string} input - A query string or data object to render the UI.
     * @preserve
     */render(input){this.eventEmitter.emit("ui-render-start",{input:input}),this.ui.render(this.engine.query(input)),this.eventEmitter.emit("ui-render-end",{input:input})}
/**
     * Renders the UI with the provided data. This method does not run any queries, so the data must be pre-processed already.
     * @param {object} input - The data to render.
     * @preserve
     */renderRaw(input){this.ui.render(input),this.eventEmitter.emit("ui-raw-rendered",{input:input})}addSelect=(key,operator,value)=>this.engine.addSelect(key,operator,value);setSelect=(key,operator,value)=>this.engine.setSelect(key,operator,value);removeSelect=(key,operator,value)=>this.engine.removeSelect(key,operator,value);setSort=(key,direction)=>this.engine.setSort(key,direction);removeSort=()=>this.engine.removeSort();setRange=(lower,upper)=>this.engine.setRange(lower,upper);removeRange=()=>this.engine.removeRange();setGroup=key=>this.engine.setGroup(key);removeGroup=()=>this.engine.removeGroup();runCurrentQuery=()=>this.engine.runCurrentQuery();exportData=(filename,format)=>!format&&filename&&filename.includes(".")?this.engine.requestExport(filename.split(".")[0],filename.split(".")[1]):this.engine.requestExport(filename,format);get exportableFileFormats(){return this.engine.getExportConnectors()}}class DynamicGridUI{constructor(dynamicGrid,ui_config,eventEmitter){this.dynamicGrid=dynamicGrid,this.containerId=ui_config.containerId,this.eventEmitter=eventEmitter,this.eventEmitter.emit("ui-initialized",{containerId:this.containerId}),this.keyboardShortcuts=dynamicGrid.keyboardShortcuts,this.engine=dynamicGrid.engine,this.table=null,this.header=null,this.body=null,this.scrollContainer=null,this.config={minColumnWidth:ui_config.minColumnWidth??50,rowHeight:ui_config.rowHeight??40,bufferedRows:ui_config.bufferedRows??5,allowFieldEditing:ui_config.allowFieldEditing??!1,colorScheme:ui_config.colorScheme??"light"},this.virtualScrolling={scrollTop:0,visibleRowsCount:0,startIndex:0,endIndex:0,totalHeight:0,topSpacer:null,bottomSpacer:null},this.#_init(this.containerId),this.UIChache=0,this.UICacheRefresh=!1,this.showData=[],this.hiddenColumns=new Set,this.undoStack=[],this.redoStack=[],this.contextMenu=new ContextMenu({width:250,style:{accent:"#3b82f6",backgroundColor:"#ffffff",textColor:"#333333",padding:"4px"},closeOnClick:!0,closeOnOutsideClick:!0})}render(data){if(!data)return;if(0===data.length)return void this.clearContent();this.showData=data;const isGroupedData=(data=>Array.isArray(firstItem(data)))(this.showData),columns=isGroupedData?Object.keys(firstItem(this.showData)[0]):Object.keys(this.showData[0]),firstDataItem=isGroupedData?firstItem(this.showData)[0]:this.showData[0],cacheHash=FastHash(columns);this.UICacheRefresh=this.UIChache!==cacheHash,this.UIChache=cacheHash,this.UICacheRefresh&&(this.table=this.#_createResizableTable(columns.slice(1),firstDataItem,isGroupedData)),this.#_renderTable(this.showData,columns.slice(1),isGroupedData),this.#_setupVirtualScrolling(),this.eventEmitter.emit("ui-rendered",{...this.showData})}toggleColumn(IndexOrIndex){const Index="number"==typeof IndexOrIndex?IndexOrIndex:this.engine.getColumns().indexOf(IndexOrIndex.toLowerCase());"collapse"===this.colGroup1.children[Index+1].style.visibility?this.#_showColumn(Index):this.#_hideColumn(Index)}clearContent(){this.table&&(this.bodyTable?.remove(),this.scrollContainer?.remove()),this.showData=[],this.eventEmitter.emit("ui-content-cleared")}#_hideColumn(Index){const column=this.colGroup1.children[Index+1],headerCell=this.headerTable.querySelector(`th:nth-child(${Index+2})`);column&&(column.style.visibility="collapse",headerCell.style.pointerEvents="none");const column2=this.colGroup2.children[Index+1];column2&&(column2.style.visibility="collapse")}#_showColumn(Index){const column=this.colGroup1.children[Index+1],headerCell=this.headerTable.querySelector(`th:nth-child(${Index+2})`);column&&(column.style.visibility="visible",headerCell.style.pointerEvents="auto");const column2=this.colGroup2.children[Index+1];column2&&(column2.style.visibility="visible")}#_init(containerId){if(this.container=document.querySelector(containerId),!this.container)throw new GridError(`Container with id "${containerId}" not found`);this.keyboardShortcuts.addShortcut("ctrl+shift+a","Shortcut to toggle column visibility",(()=>{this.autoFitCellWidth()})),this.eventEmitter.emit("ui-container-initialized",{containerId:containerId})}#_createResizableTable(){return this.UICacheRefresh?(this.table?.remove(),this.table=document.createElement("div"),this.table.className="table",this.table):this.table}#_renderTable(data,columns,isGroupedData){const tableExists=this.table&&this.table.parentNode,tableHeaderExists=this.headerTable&&this.headerTable.parentNode,bodyTableExists=this.bodyTable&&this.bodyTable.parentNode;if(tableExists||(this.table=document.createElement("div"),this.table.className="dynamic-grid-table",this.table.dataset.theme=this.config.colorScheme),!tableHeaderExists){this.headerTable=document.createElement("table"),this.headerTable.className="dynamic-grid-table-header",this.headerTable.setAttribute("cellspacing","0"),this.headerTable.setAttribute("cellpadding","0");const colgroup=this.#_createColGroup(columns);this.colGroup1=colgroup,this.headerTable.appendChild(colgroup),this.headerTable.appendChild(this.#_createHeader(columns,isGroupedData,colgroup)),this.table.appendChild(this.headerTable)}if(bodyTableExists)this.bodyTable.innerHTML="",this.bodyTable.appendChild(this.colGroup2);else{this.scrollContainer=document.createElement("div"),this.scrollContainer.className="dynamic-grid-scroll-container",this.scrollContainer.style.position="relative",this.scrollContainer.style.width="100%",this.bodyTable=document.createElement("table"),this.bodyTable.className="dynamic-grid-table-body",this.bodyTable.setAttribute("cellspacing","0"),this.bodyTable.setAttribute("cellpadding","0");const colgroup2=this.#_createColGroup(columns);this.colGroup2=colgroup2,this.bodyTable.appendChild(colgroup2),this.virtualScrolling.topSpacer=document.createElement("tr"),this.virtualScrolling.topSpacer.style.height="0px",this.virtualScrolling.topSpacer.className="virtual-scroll-spacer top-spacer",this.virtualScrolling.bottomSpacer=document.createElement("tr"),this.virtualScrolling.bottomSpacer.style.height="0px",this.virtualScrolling.bottomSpacer.className="virtual-scroll-spacer bottom-spacer",this.scrollContainer.appendChild(this.bodyTable),this.table.appendChild(this.scrollContainer)}this.body=this.#_createVirtualBody(),this.bodyTable.appendChild(this.body),this.container.appendChild(this.table)}#_createColGroup(headers){const colgroup=document.createElement("colgroup"),topLeftCorner=document.createElement("col");topLeftCorner.style.width="30px",colgroup.appendChild(topLeftCorner);var width=0;for(const key in headers){if("string"!=typeof headers[key])continue;const col=document.createElement("col");width+=headers[key].width??100,col.style.width=`${headers[key].width??100}px`,col.style.minWidth=`${this.config.minColumnWidth}px`,colgroup.appendChild(col)}return colgroup.style.width=`${width}px`,colgroup}#_createHeader(columns){const thead=document.createElement("thead"),tr=document.createElement("tr");tr.className="header-row";const thTopLeftCorner=document.createElement("th");return thTopLeftCorner.className="header-cell top-left-corner",tr.appendChild(thTopLeftCorner),thTopLeftCorner.addEventListener("contextmenu",(e=>(e.preventDefault(),e.stopPropagation(),this.contextMenu.clear(),this.contextMenu.searchSelect("Columns to show/hide",this.engine.getColumns().map((column=>({label:column,value:column,checked:!0}))),{onChange:value=>{const columns=this.engine.getColumns(),diff=columns.filter((column=>!value.includes(column)));columns.forEach((column=>{diff.includes(column)?this.#_hideColumn(columns.indexOf(column)):this.#_showColumn(columns.indexOf(column))}))}}),this.contextMenu.showAt(100,100)))),columns.forEach(((columnName,colIndex)=>{colIndex++;const plugin=this.engine.getPlugin(columnName),th=document.createElement("th");th.className="header-cell",th.style.height=`${this.config.rowHeight}px`,th.style.position="relative";const div=document.createElement("div");div.className="header-cell-content";const button=document.createElement("button");button.className="header-cell-button",button.innerText="▼";const span=document.createElement("span");span.className="header-cell-text",span.innerText=columnName,div.appendChild(button),div.appendChild(span),th.appendChild(div);const resizeHandle=document.createElement("div");resizeHandle.className="header-resize-handle";let isDragging=!1,startX=0,startWidth=0;const colElement=this.colGroup1?.children[colIndex];let newWidth=0;resizeHandle.addEventListener("mouseenter",(()=>{resizeHandle.classList.add("hover")})),resizeHandle.addEventListener("mouseleave",(()=>{isDragging||resizeHandle.classList.remove("hover")})),resizeHandle.addEventListener("mousedown",(e=>{isDragging=!0,startX=e.clientX,startWidth=colElement?.offsetWidth||100;const onMouseMove=e=>{if(!isDragging||!colElement)return;const delta=e.clientX-startX;newWidth=Math.max(this.config.minColumnWidth,startWidth+delta),newWidth=Math.max(newWidth,this.config.minColumnWidth),colElement.style.width=`${newWidth}px`},onMouseUp=()=>{isDragging=!1,resizeHandle.classList.remove("hover"),this.colGroup2.children[colIndex].style.width=`${newWidth}px`,document.removeEventListener("mousemove",onMouseMove),document.removeEventListener("mouseup",onMouseUp)};document.addEventListener("mousemove",onMouseMove),document.addEventListener("mouseup",onMouseUp)})),th.addEventListener("contextmenu",(e=>{e.preventDefault(),e.stopPropagation(),plugin.showMore(columnName,th,this.engine,this)})),th.appendChild(resizeHandle),tr.appendChild(th)})),thead.appendChild(tr),thead}#_createVirtualBody(){const tbody=document.createElement("tbody");return tbody.appendChild(this.virtualScrolling.topSpacer),tbody.appendChild(this.virtualScrolling.bottomSpacer),this.body=tbody,tbody}#_setupVirtualScrolling(){if(!this.table||!this.showData.length)return;const totalRows=this.showData.length;this.virtualScrolling.totalHeight=totalRows*this.config.rowHeight;const visibleHeight=this.table.clientHeight||400;this.virtualScrolling.visibleRowsCount=Math.ceil(visibleHeight/this.config.rowHeight);const totalVisibleRows=this.virtualScrolling.visibleRowsCount+2*this.config.bufferedRows;this.virtualScrolling.startIndex=0,this.virtualScrolling.endIndex=Math.min(totalVisibleRows,totalRows),this.table.addEventListener("scroll",this.#_handleScroll.bind(this)),this._updateVisibleRows(),this.virtualScrolling.scrollTop>0&&(this.table.scrollTop=this.virtualScrolling.scrollTop)}#_handleScroll(event){const scrollTop=event.target.scrollTop;if(this.virtualScrolling.scrollTop===scrollTop&&0!==scrollTop)return;const rowIndex=Math.floor(scrollTop/this.config.rowHeight),startIndex=Math.max(0,rowIndex-this.config.bufferedRows),endIndex=Math.min(this.showData.length,rowIndex+this.virtualScrolling.visibleRowsCount+this.config.bufferedRows);startIndex===this.virtualScrolling.startIndex&&endIndex===this.virtualScrolling.endIndex||(this.virtualScrolling.startIndex=startIndex,this.virtualScrolling.endIndex=endIndex,this._updateVisibleRows())}_updateVisibleRows(){Array.from(this.body.querySelectorAll("tr:not(.virtual-scroll-spacer)")).forEach((row=>row.remove()));const fragment=document.createDocumentFragment();for(let i=this.virtualScrolling.startIndex;i<this.virtualScrolling.endIndex;i++){const row=this.#_createRow(i);fragment.appendChild(row)}this.virtualScrolling.topSpacer.after(fragment),this.virtualScrolling.topSpacer.style.height=this.virtualScrolling.startIndex*this.config.rowHeight+"px";const bottomSpacerHeight=Math.max(0,(this.showData.length-this.virtualScrolling.endIndex)*this.config.rowHeight);this.virtualScrolling.bottomSpacer.style.height=`${bottomSpacerHeight}px`}#_createRow(index){const tr=document.createElement("tr");return tr.dataset.index=index,this.getData(index,!1).then((data=>{const numberCell=document.createElement("td");numberCell.className="body-cell",numberCell.style.height=`${this.config.rowHeight}px`,numberCell.innerText=index+1,tr.appendChild(numberCell),Object.entries(data).forEach((([key,value])=>{if("internal_id"===key)return;const plugin=this.engine.getPlugin(key),td=this.engine.headers[key].isEditable?plugin.renderEditableCell(value,(callback=>{callback=plugin.parseValue(callback),this.engine.updateTracker.addEdit({column:key,row:data,previousValue:value,newValue:callback}),this.engine.alterData(data.internal_id,key,callback),this.eventEmitter.emit("ui-cell-edit",{column:key,row:data,previousValue:value,newValue:callback}),td.innerText=callback,td.classList.add("edited")})):plugin.renderCell(value);td instanceof HTMLTableCellElement?(td.className="body-cell",td.style.height=`${this.config.rowHeight}px`,tr.appendChild(td)):console.error("[plugin].renderCell() did not return a td element",{td:td,value:value,key:key,plugin:plugin})}))})),tr}getData(index,removeInternalId=!0){if(!this.showData||index>=this.showData.length)return Promise.reject(new Error("No data to return (data is empty, or index is out of bounds)"));index=index<0?this.showData.length+index:index;const{internal_id:internal_id,...data}=this.showData[index];return Promise.resolve(removeInternalId?data:this.showData[index])}#_approximateColumnWidth(){const columns=this.engine.getColumns(),columnWidths={};return columns.forEach((column=>{this.engine.getPlugin(column);const sampleData=this.showData.map((item=>item[column]));columnWidths[column]=function(sampleData){const maxLength=Math.max(...sampleData.map((item=>String(item).length)));return Math.max(50,8.75*maxLength)}(sampleData)})),columnWidths}#_setWidths(widths){for(let i=0;i<widths.length;i++)this.setWidth(i,widths[i])}autoFitCellWidth(){this.#_setWidths(Object.values(this.#_approximateColumnWidth()))}setWidth(column,width){this.colGroup1.children[column+1].style.width=`${width}px`,this.colGroup2.children[column+1].style.width=`${width}px`}}class APIBase{constructor(dynamicGrid,config={}){this.dynamicGrid=dynamicGrid,this.baseUrl=config.baseUrl||"https://api.example.com",this.headers={"Content-Type":"application/json",Accept:"application/json",...config.headers},this.timeout=config.timeout||3e4,this.useAuth=config.useAuth||!1,this.authToken=config.authToken||null,this.apiVersion=config.apiVersion,this.abortControllers=new Map,this.dynamicGrid.keyboardShortcuts.addShortcut("ctrl+s","The keybind that tells the APIBase to force-send an update request",(()=>this.postData(this.dynamicGrid.engine.updateTracker.updates)))}setAuthToken(token){this.authToken=token,this.useAuth=!!token}clearAuthToken(){this.authToken=null,this.useAuth=!1}buildUrl(endpoint){const cleanEndpoint=endpoint.startsWith("/")?endpoint.substring(1):endpoint;return this.apiVersion?`${this.baseUrl}/${this.apiVersion}/${cleanEndpoint}`:`${this.baseUrl}/${cleanEndpoint}`}prepareHeaders(){const headers={...this.headers};return this.useAuth&&this.authToken&&(headers.Authorization=`Bearer ${this.authToken}`),headers}async request(method,endpoint,options={}){const{data:data=null,params:params={},headers:headers={},skipAuth:skipAuth=!1,timeout:timeout=this.timeout,requestId:requestId=Date.now().toString()}=options;let url=this.buildUrl(endpoint);if(Object.keys(params).length>0){const queryParams=new URLSearchParams;for(const[key,value]of Object.entries(params))queryParams.append(key,value);url+=`?${queryParams.toString()}`}const requestHeaders={...this.prepareHeaders(),...headers};skipAuth&&delete requestHeaders.Authorization;const fetchOptions={method:method,headers:requestHeaders,mode:"cors",cache:"no-cache",credentials:"same-origin",redirect:"follow",referrerPolicy:"no-referrer"};["POST","PUT","PATCH"].includes(method.toUpperCase())&&null!==data&&(fetchOptions.body=JSON.stringify(data));const controller=new AbortController;fetchOptions.signal=controller.signal,this.abortControllers.set(requestId,controller);const timeoutId=setTimeout((()=>{this.abortControllers.has(requestId)&&(controller.abort(),this.abortControllers.delete(requestId))}),timeout);try{const response=await fetch(url,fetchOptions);return clearTimeout(timeoutId),this.abortControllers.delete(requestId),await this.handleResponse(response)}catch(error){if(clearTimeout(timeoutId),this.abortControllers.delete(requestId),"AbortError"===error.name)throw new APIError("Request timeout","TIMEOUT",408);throw new APIError(error.message||"Network error","NETWORK_ERROR",0,error)}}async handleResponse(response){let data;try{const contentType=response.headers.get("content-type");data=contentType&&contentType.includes("application/json")?await response.json():await response.text()}catch(error){throw new APIError("Failed to parse response","PARSE_ERROR",response.status,error)}if(!response.ok){const errorCode=data.error?.code||"API_ERROR",errorMessage=data.error?.message||"Unknown API error";throw new APIError(errorMessage,errorCode,response.status,null,data)}return data}cancelRequest(requestId){if(this.abortControllers.has(requestId)){return this.abortControllers.get(requestId).abort(),this.abortControllers.delete(requestId),!0}return!1}cancelAllRequests(){for(const controller of this.abortControllers.values())controller.abort();this.abortControllers.clear()}async fetchData(params={},options={}){throw new Error('Method "fetchData" must be implemented in a subclass')}async postData(data,options={}){throw new Error('Method "postData" must be implemented in a subclass')}async updateData(data,options={}){throw new Error('Method "updateData" must be implemented in a subclass')}async patchData(data,options={}){throw new Error('Method "patchData" must be implemented in a subclass')}async deleteData(options={}){throw new Error('Method "deleteData" must be implemented in a subclass')}}class APIError extends Error{constructor(message,code,status,originalError=null,responseData=null){super(message),this.name="APIError",this.code=code,this.status=status,this.originalError=originalError,this.responseData=responseData,this.timestamp=new Date,Error.captureStackTrace&&Error.captureStackTrace(this,APIError)}}class ExportConnector{constructor(){this.name="ExportConnector",this.mimeType="application/octet-stream",this.extension="bin"}export(data,headers,name){throw new Error("Export method not implemented")}}class CSVExportConnector extends ExportConnector{constructor(){super(),this.name="csv",this.mimeType="text/csv",this.extension="csv",this.delimiter=";"}export(data){if(!Array.isArray(data)||0===data.length)throw new Error("Invalid or empty data provided for CSV export");const headers=Object.keys(data[0]),rows=data.map((row=>headers.map((header=>{const value=row[header];return"string"==typeof value&&value.includes(this.delimiter)?`"${value.replace(/"/g,'""')}"`:value})).join(this.delimiter)));return[headers.join(this.delimiter),...rows].join("\n")}}class XLSXExportConnector extends ExportConnector{constructor(){super(),this.name="xlsx",this.mimeType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",this.extension="xlsx",this.loadLibrary()}loadLibrary(){if(window.XLSX)return;const script=document.createElement("script");script.src="https://grid.kronk.tech/xlsx.bundle.js",script.type="application/javascript",document.head.appendChild(script)}export(data,headers,name){if(!Array.isArray(data)||0===data.length)throw new Error("Invalid or empty data provided for XLSX export");if(!window.XLSX)throw new Error("XLSX library not loaded. Please try again in a moment.");try{const workbook=XLSX.utils.book_new(),ws=XLSX.utils.json_to_sheet(data),headerCount=Object.keys(headers).length;ws["!autofilter"]={ref:"A1:"+this.getExcelHeaderLetter(headerCount-2)+"1"},ws["!cols"]=this.fitToColumn(data),ws["!cols"].forEach(((col,index)=>{const colLetter=this.getExcelHeaderLetter(index);ws[colLetter+"1"].s={font:{bold:!0,color:{rgb:"FFFFFF"}},fill:{fgColor:{rgb:"4BACC6"}},alignment:{horizontal:"left",vertical:"top"}}})),XLSX.utils.book_append_sheet(workbook,ws,"Sheet");return XLSX.write(workbook,{type:"array",bookType:"xlsx"})}catch(error){throw console.error("XLSX export failed:",error),error}}getExcelHeaderLetter(index){let letter="";for(;index>=0;)letter=String.fromCharCode(index%26+65)+letter,index=Math.floor(index/26)-1;return letter}fitToColumn(data,headers){const widths=[];for(const field in data[0])widths.push({wch:Math.max(field.length+3,...data.map((item=>item[field]?.toString()?.length??0)))});return widths}}class JSONExportConnector extends ExportConnector{constructor(){super(),this.name="json",this.mimeType="application/json",this.extension="json"}export(data,headers,name){if(!Array.isArray(data)||0===data.length)throw new Error("Invalid or empty data provided for JSON export");return JSON.stringify(data,null,2)}}class XMLExportConnector extends ExportConnector{constructor(){super(),this.name="xml",this.mimeType="application/xml",this.extension="xml"}export(data,headers,name){if(!Array.isArray(data)||0===data.length)throw new Error("Invalid or empty data provided for XML export");return this.jsonToXML(data)}jsonToXML(json){let xml="<root>\n";return json.forEach((item=>{xml+="  <item>\n";for(const key in item)xml+=`    <${key}>${item[key]}</${key}>\n`;xml+="  </item>\n"})),xml+="</root>",xml}}class HTMLExportConnector extends ExportConnector{constructor(){super(),this.name="html",this.mimeType="text/html",this.extension="html"}export(data,headers,name){if(!Array.isArray(data)||0===data.length)throw new Error("Invalid or empty data provided for HTML export");let htmlString="<table>\n";return htmlString+=this.headersToHTML(Object.keys(headers)),htmlString+=this.jsonToHTML(data),htmlString+="</table>",htmlString}headersToHTML(headers){let html="  <tr>\n";return headers.forEach((header=>{html+=`    <th>${header}</th>\n`})),html+="  </tr>\n",html}jsonToHTML(json){let html="";return json.forEach((item=>{html+="  <tr>\n";for(const key in item)html+=`    <td>${item[key]}</td>\n`;html+="  </tr>\n"})),html}}class TXTExportConnector extends ExportConnector{constructor(){super(),this.name="txt",this.mimeType="text/plain",this.extension="txt"}export(data,headers,name){if(!Array.isArray(data)||0===data.length)throw new Error("Invalid or empty data provided for TXT export");return data.map((item=>Object.values(item).join("\t"))).join("\n")}}class TypePlugin{static DEFAULT_OPERATORS=["==","!=","in"];constructor(){if(this.constructor===TypePlugin)throw new Error("TypePlugin is abstract and cannot be instantiated directly");this.name=this.constructor.name,this.operators=["==","!=","in"]}validate(value){throw new Error("validate must be implemented by subclass")}parseValue(value){throw new Error("parseValue must be implemented by subclass")}evaluate(query,dataIndexes,data,indices){throw new Error("evaluate must be implemented by subclass")}evaluateCondition(dataValue,operator,compareValue){throw new Error("evaluateCondition must be implemented by subclass")}sort(query,data){const{field:field,value:direction}=query;return[...data].sort(((a,b)=>{const comparison=String(a[field]).localeCompare(String(b[field]));return"asc"===direction?comparison:-comparison}))}checkOperator(operator){return this.operators.find((op=>op===operator))||!1}getOperatorSymbols(){return[...this.operators]}renderCell(value){const cell=document.createElement("td");return cell.innerText=String(value),cell}renderEditableCell(value,onEdit){const cell=document.createElement("td");return cell.innerHTML=String(value),cell.contentEditable=!0,cell.spellcheck=!1,cell.addEventListener("focus",(()=>{cell.classList.add("editing"),cell.setAttribute("data-editing","true"),cell.setAttribute("start-value",cell.innerText)})),cell.addEventListener("focusout",(()=>{cell.classList.remove("editing"),cell.removeAttribute("data-editing"),cell.getAttribute("start-value")!==cell.innerText&&onEdit(cell.innerText),cell.removeAttribute("start-value")})),cell.addEventListener("keydown",(e=>{"Enter"===e.key&&(cell.blur(),e.preventDefault())})),cell}showMore(key,element,engine,UI){const{x:x,y:y,width:width,height:height}=element.getBoundingClientRect(),typeOptions=engine.headers[key];return UI.contextMenu.clear(),UI.contextMenu.button("Sort "+key+" ascending",(()=>{engine.setSort(key,"asc"),UI.render(engine.runCurrentQuery())})).button("Sort "+key+" descending",(()=>{engine.setSort(key,"desc"),UI.render(engine.runCurrentQuery())})).button("Unsort "+key,(()=>{engine.setSort(key),UI.render(engine.runCurrentQuery())})),!typeOptions.isUnique&&typeOptions.isGroupable&&UI.contextMenu.separator().button("Group by "+key,(()=>{engine.setGroup(key),UI.render(engine.runCurrentQuery())})).button("Un-group",(()=>{engine.setGroup(),UI.render(engine.runCurrentQuery())})),UI.contextMenu.showAt(x,y+height)}}class stringTypePlugin extends TypePlugin{constructor(){super(),this.operators=["%=","=%","*=","!*=","==","!=","in"]}validate(value){return"string"==typeof value}parseValue(value){return null==value?null:String(value)}evaluate(query,dataIndexes,data,indices){if(dataIndexes&&indices&&dataIndexes.size<=indices.size)for(const index of dataIndexes.keys())this.evaluateCondition(index,query.operator,query.value)||dataIndexes.get(index).forEach((idx=>indices.delete(idx)));else for(const index of indices)this.evaluateCondition(data[index][query.field],query.operator,query.value)||indices.delete(index);return indices}evaluateCondition(dataValue,operator,value){if("in"===operator&&(value=JSON.parse(value)),Array.isArray(value)&&value.length>0&&"in"===operator)return value.includes(dataValue);switch(operator){case"==":return dataValue===value;case"!=":return dataValue!==value;case"%=":return dataValue.startsWith(value);case"=%":return dataValue.endsWith(value);case"*=":return dataValue.includes(value);case"!*=":return!dataValue.includes(value)}return!1}sort(query,data){const{field:field,value:value}=query;return data.sort(((a,b)=>"asc"===value?a[field].localeCompare(b[field]):"desc"===value?b[field].localeCompare(a[field]):void 0))}}class numberTypePlugin extends TypePlugin{constructor(){super(),this.operators=[">","<",">=","<=","==","!=","in","><"]}validate(value){if(null==value)return!1;if("number"==typeof value)return!isNaN(value);const valueStr=String(value).replace(",",".");return!isNaN(Number(valueStr))||valueStr.includes("-")&&valueStr.split("-").every((part=>!isNaN(this.parseValue(part))))}parseValue(value){if(null==value)return null;if("number"==typeof value)return value;if(value.toString().split("-").length>1){const parts=value.toString().split("-");return[this.parseValue(parts[0]),this.parseValue(parts[1])]}return value=value.replace(",","."),Number(value)}evaluate(query,dataIndexes,data,indices){if(dataIndexes&&indices&&dataIndexes.size<=indices.size)for(const index of dataIndexes.keys())this.evaluateCondition(index,query.operator,query.value)||dataIndexes.get(index).forEach((idx=>indices.delete(idx)));else console.error("dataIndexes is not defined or indices is larger than dataIndexes, this is a big nono!");return indices}evaluateCondition(dataValue,operator,value){if("in"===operator&&(value=JSON.parse(value)),"in"===operator&&Array.isArray(value)&&value.length>0)return value.includes(dataValue);if("><"===operator&&Array.isArray(value)&&value.length>0){let a=value[0],b=value[1];if(isNaN(a)||isNaN(b))throw new Error("between operator requires two numbers");return a>b&&([a,b]=[b,a]),dataValue>=a&&dataValue<=b}switch(operator){case">":return dataValue>value;case"<":return dataValue<value;case">=":return dataValue>=value;case"<=":return dataValue<=value;case"==":return dataValue===value;case"!=":return dataValue!==value}}renderCell(value){const cell=document.createElement("td");if(isNaN(value))return cell.innerText="",cell;const parts=value.toString().split(".");return parts[0]=parts[0].replace(/\B(?=(\d{3})+(?!\d))/g,"."),cell.textContent=parts.join(","),cell}sort(query,data){const{field:field,value:value}=query;return data.sort(((a,b)=>"asc"===value?a[field]-b[field]:"desc"===value?b[field]-a[field]:void 0))}showMore(key,element,engine,UI){const{x:x,y:y,width:width,height:height}=element.getBoundingClientRect(),typeOptions=engine.headers[key],vanTot={van:Number.MIN_SAFE_INTEGER,tot:Number.MAX_SAFE_INTEGER};return UI.contextMenu.clear(),UI.contextMenu.submenu("Filter "+key,(submenu=>{var operator="==";submenu.dropdown("Filter "+key,[{label:"Gelijk aan",value:"=="},{label:"Niet gelijk aan",value:"!="},{label:"Groter dan",value:">"},{label:"Groter dan of gelijk aan",value:">="},{label:"Kleiner dan",value:"<"},{label:"Kleiner dan of gelijk aan",value:"<="},{label:"tussen",value:"><"},{label:"blank",value:"== null"},{label:"niet blank",value:"!= null"}],{value:"==",onChange:value=>{operator=value},id:"dropdown-id"}).input("Filter",{placeholder:"Filter",onChange:value=>{engine.setSelect(key,operator,value),UI.render(engine.runCurrentQuery())},showWhen:{elementId:"dropdown-id",value:["==","!=",">","<",">=","<="]}}).input("Filter",{placeholder:"Van",onChange:value=>{vanTot.van=value||Number.MIN_SAFE_INTEGER,vanTot.tot===Number.MAX_SAFE_INTEGER||vanTot.van>vanTot.tot||(engine.setSelect(key,"><",vanTot.van+"-"+vanTot.tot),UI.render(engine.runCurrentQuery()))},showWhen:{elementId:"dropdown-id",value:["><"]}}).input("Filter",{placeholder:"Tot",onChange:value=>{vanTot.tot=value||Number.MAX_SAFE_INTEGER,vanTot.van===Number.MIN_SAFE_INTEGER||vanTot.tot<=vanTot.van||(engine.setSelect(key,"><",vanTot.van+"-"+vanTot.tot),UI.render(engine.runCurrentQuery()))},showWhen:{elementId:"dropdown-id",value:["><"]}})})),UI.contextMenu.button("Sort "+key+" ascending",(()=>{engine.setSort(key,"asc"),UI.render(engine.runCurrentQuery())})).button("Sort "+key+" descending",(()=>{engine.setSort(key,"desc"),UI.render(engine.runCurrentQuery())})).button("Unsort "+key,(()=>{engine.setSort(key),UI.render(engine.runCurrentQuery())})),!typeOptions.isUnique&&typeOptions.isGroupable&&UI.contextMenu.separator().button("Group by "+key,(()=>{engine.setGroup(key),UI.render(engine.runCurrentQuery())})).button("Un-group",(()=>{engine.setGroup(),UI.render(engine.runCurrentQuery())})),UI.contextMenu.showAt(x,y+height)}}class booleanTypePlugin extends TypePlugin{constructor(){super(),this.operators=["==","!="]}validate(value){return!0===(value=Boolean(value))||!1===value}parseValue(value){if(!0===value||"true"===value||1===value||"1"===value)return!0;if(!1===value||"false"===value||0===value||"0"===value)return!1;throw new Error("Invalid boolean value: "+value)}evaluate(query,dataIndexes,data,indices){if(query.value=!0===query.value,dataIndexes){const allowedValues=dataIndexes.get(query.value);return new Set([...indices].filter((idx=>allowedValues.has(idx))))}return new Set(data.map(((row,i)=>row[query.field]===query.value?i:null)).filter((x=>null!==x)))}evaluateCondition(dataValue,operator,value){return this.parseValue(dataValue)===this.parseValue(value)}sort(query,data){const{field:field,value:value}=query;return data.sort(((a,b)=>"asc"===value?a[field]-b[field]:"desc"===value?b[field]-a[field]:void 0))}renderCell(value){const cell=document.createElement("td"),checkbox=document.createElement("input");return checkbox.type="checkbox",checkbox.setAttributeNode(document.createAttribute("disabled")),value&&checkbox.setAttributeNode(document.createAttribute("checked")),checkbox.style.width="-webkit-fill-available",cell.appendChild(checkbox),cell}renderEditableCell(value,onEdit){const cell=document.createElement("td"),checkbox=document.createElement("input");return checkbox.type="checkbox",value&&checkbox.setAttributeNode(document.createAttribute("checked")),checkbox.style.width="-webkit-fill-available",checkbox.name="checkbox",checkbox.addEventListener("change",(()=>{onEdit(checkbox.checked)})),cell.appendChild(checkbox),cell}showMore(key,element,engine,UI){const{x:x,y:y,width:width,height:height}=element.getBoundingClientRect();return UI.contextMenu.clear(),UI.contextMenu.button("Sort "+key+" ascending",(()=>{engine.setSort(key,"asc"),UI.render(engine.runCurrentQuery())})).button("Sort "+key+" descending",(()=>{engine.setSort(key,"desc"),UI.render(engine.runCurrentQuery())})).button("Unsort "+key,(()=>{engine.setSort(key),UI.render(engine.runCurrentQuery())})).separator().button("Only show true",(()=>{engine.addSelect(key,"==","true"),engine.removeSelect(key,"==","false"),UI.render(engine.runCurrentQuery())})).button("Only show false",(()=>{engine.addSelect(key,"==","false"),engine.removeSelect(key,"==","true"),UI.render(engine.runCurrentQuery())})).button("Show all",(()=>{engine.removeSelect(key,"==","true"),engine.removeSelect(key,"==","false"),UI.render(engine.runCurrentQuery())})).separator().button("Group by "+key,(()=>{engine.setGroup(key),UI.render(engine.runCurrentQuery())})).button("Un-group",(()=>{engine.setGroup(),UI.render(engine.runCurrentQuery())})),UI.contextMenu.showAt(x,y+height)}}class dateTypePlugin extends numberTypePlugin{constructor(onlyDate=!1,writeMonthAsText=!0){super(),this.options={onlyDate:onlyDate,writeMonthAsText:writeMonthAsText},this.monthsShort=["jan","feb","mar","apr","mei","jun","jul","aug","sep","okt","nov","dec"],this.monthsShortEnglish=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"]}parseValue(value){if(null==value)return null;if("string"==typeof value){const dateParts=value.split(" "),date=dateParts[0].split("-"),time=dateParts[1]?dateParts[1].split(":"):["0","0","0"],day=parseInt(date[0]),month=isNaN(Number(date[1]))?this.monthsShort.indexOf(date[1].substring(0,3).toLowerCase())+1===-1?this.monthsShortEnglish.indexOf(date[1].substring(0,3).toLowerCase())+1:this.monthsShort.indexOf(date[1].substring(0,3).toLowerCase())+1:parseInt(date[1]),year=parseInt(date[2])<1e3?parseInt(date[2])+2e3:parseInt(date[2]),hours=parseInt(time[0]??"0"),minutes=parseInt(time[1]??"0"),seconds=parseInt(time[2]??"0"),utc=new Date(Date.UTC(year,month-1,day,hours,minutes,seconds)).getTime();return utc<1e10?1e3*utc:utc}return"number"==typeof value?(value<1e10&&(value*=1e3),value):void 0}dateToString(date){if(null==date)return null;const d=new Date(0);date<1e10&&(date*=1e3),d.setUTCMilliseconds(date);const day=d.getUTCDate().toString().padStart(2,"0"),month=this.options.writeMonthAsText?this.monthsShort[d.getUTCMonth()]:(d.getUTCMonth()+1).toString().padStart(2,"0"),year=d.getUTCFullYear().toString().padStart(4,"0"),hours=d.getUTCHours().toString().padStart(2,"0"),minutes=d.getUTCMinutes().toString().padStart(2,"0");return this.options.onlyDate||hours+minutes==="0000"?`${day}-${month}-${year}`:`${day}-${month}-${year} ${hours}:${minutes}`}renderCell(value){const cell=document.createElement("td");return cell.innerText=this.dateToString(value),cell}renderEditableCell(value,onEdit){const cell=this.renderCell(value);return cell.contentEditable=!0,cell.addEventListener("focusout",(()=>{const date=this.parseValue(cell.innerText);onEdit(date),cell.innerText=this.dateToString(date)})),cell.addEventListener("keydown",(e=>{"Enter"===e.key&&(cell.blur(),e.preventDefault())})),cell}}class QueryParser{constructor(config){this.config={useStrictCase:config.useStrictCase||!1,SymbolsToIgnore:config.SymbolsToIgnore||["_","-"]}}static QUERIES={FUZZY:/^search\s+"([^"]+)"$/i,GROUP:/group\s+(.+)/i,RANGE:/range\s+(?:(-?\d+)-(-?\d+)?|(-?\d+))/i,SORT:/sort\s+(.+)\s+(asc|desc)/i,SELECT:/(\S+)\s(\S+)\s(.*)/i};parseQuery(query,plugins,headers){return query.split(/\s+and\s+|\s+&&\s+/i).map((subQuery=>this.parseSubQuery(subQuery.trim(),plugins,headers))).filter((query=>query.queryType))}parseSubQuery(subQuery,plugins,headers){if(!(subQuery=subQuery.endsWith(" and")?subQuery.slice(0,-4):subQuery)||0===subQuery.length)return{};for(const[type,regex]of Object.entries(QueryParser.QUERIES)){const match=regex.exec(subQuery);if(match)return this.parseMatch(match,type,plugins,headers)||{}}return console.warn("Invalid query: "+subQuery+"\nValid queries are: "+Object.keys(QueryParser.QUERIES).join(", ").toLowerCase()+"\nQuery: "+subQuery),{}}parseMatch(match,type,plugins,headers){if("SELECT"===type){let[_,key,operator,value]=match;key=findMatchingIndexKey(Object.keys(headers),key,this.config);const pluginType=headers[key].type,plugin=plugins[pluginType];if(!plugin)throw new GridError("No plugin found for header ("+pluginType+") for key ("+key+")\nDo you know certain that the name of the key is correct?");let field=key,operatorObj=plugin.checkOperator(operator);if(!operatorObj)throw new GridError(this.formatOperatorError(operator,field+" "+operator+" "+value,plugin));if(!plugin.validate(value))return;return value=plugin.parseValue(value),{type:pluginType,field:field,operator:operatorObj,value:value,queryType:"SELECT"}}if("SORT"===type){let[_,key,value]=match;const pluginType=headers[key].type;if(!plugins[pluginType])throw new GridError("No plugin found for header ("+pluginType+") for key ("+key+")");return{type:pluginType,field:key,operator:"sort",value:value,queryType:"SORT"}}if("RANGE"===type){let[_,lower,upper,single]=match;return void 0!==single?(lower=0,upper=parseInt(single)):(lower=parseInt(lower),upper=void 0===upper?1/0:parseInt(upper),isNaN(lower)&&(lower=0)),lower=Math.max(0,lower-1),{type:"range",lower:lower,upper:upper,queryType:"RANGE"}}if("GROUP"===type){let[_,key]=match;return{type:"group",field:key,queryType:"GROUP"}}if("FUZZY"===type){const[_,searchText]=match;return{type:"fuzzy",value:searchText.toLowerCase(),queryType:"FUZZY"}}return console.warn("Invalid query: "+match+"\nValid queries are: "+Object.keys(QueryParser.QUERIES).join(", ").toLowerCase()),{}}formatOperatorError(operator,field,plugin){return["\n\nInvalid operator:    "+operator,"       For query:    "+field,"     options are:    "+plugin.getOperatorSymbols().join(", "),"\n"].join("\n")}}class SJQLEngine{constructor(engine_config,eventEmitter){this.data=[],this.headers=[],this.plugins=[],this.connectors=[],this.futureQuery=[],this.QueryParser=new QueryParser(engine_config),this.updateTracker=new EditTracker,this.config={},this.APIConnector=engine_config.APIConnector||null,this.eventEmitter=eventEmitter,this.currentQueryStr=""}createDataIndex(){this.dataIndexes={},Object.keys(this.headers).forEach((header=>{this.dataIndexes[header]=new Map,this.data.forEach(((row,idx)=>{const value=row[header];this.dataIndexes[header].has(value)||this.dataIndexes[header].set(value,new Set),this.dataIndexes[header].get(value).add(idx)}))}))}autoDetectHeaders(data){for(const key of Object.keys(data))!0===data[key]||!1===data[key]?this.headers[key]={type:"boolean",isUnique:!1,isHidden:!1,isEditable:!0}:isNaN(data[key])?this.headers[key]={type:"string",isUnique:!1,isHidden:!1,isEditable:!0}:this.headers[key]={type:"number",isUnique:!1,isHidden:!1,isEditable:!0}}getData(index,noPromise=!1){const isValidIndex=this.data&&this.data.length>0&&index<this.data.length;if(index=index<0?this.data.length+index:index,noPromise){if(!isValidIndex)throw new Error("No data to return (data is empty, or index is out of bounds)");const{internal_id:internal_id,...data}=this.data[index];return data}return new Promise(((resolve,reject)=>{if(!isValidIndex)return reject(new Error("No data to return (data is empty, or index is out of bounds)"));const{internal_id:internal_id,...data}=this.data[index];resolve(data)}))}getColumns(){return this.data&&0!==this.data.length?Object.keys(this.data[0]).filter((key=>"internal_id"!==key)):(console.warn("No data provided, returning empty array"),[])}query(query=""){if(!this.data||0===this.data.length)return console.warn("No data provided, returning empty array"),[];if(!query||""===query)return console.warn("No query provided, returning all data"),this.currentQueryStr="",this.data;const parsedQuery=this.QueryParser.parseQuery(query,this.plugins,this.headers);return this.#_query(parsedQuery)}#_query(query){if(!query||0===query.length)return this.currentQueryStr="",console.warn("No valid query provided, returning all data"),this.data;const selectQueries=[];let sortQuery=null,rangeQuery=null,groupQuery=null,fuzzyQuery=null;for(const q of query)switch(q.queryType){case"SELECT":selectQueries.push(q);break;case"SORT":sortQuery=q;break;case"RANGE":rangeQuery=q;break;case"GROUP":groupQuery=q;break;case"FUZZY":fuzzyQuery=q}this.currentQueryStr="",selectQueries.forEach((q=>this.currentQueryStr+=q.field+" "+q.operator+" "+q.value+" and ")),sortQuery&&(this.currentQueryStr+="sort "+sortQuery.field+" "+sortQuery.value+" and "),rangeQuery&&(this.currentQueryStr+="range "+rangeQuery.lower+" "+rangeQuery.upper+" and "),groupQuery&&(this.currentQueryStr+="group "+groupQuery.field+" and "),fuzzyQuery&&(this.currentQueryStr+="search "+fuzzyQuery.value+" and "),this.currentQueryStr=this.currentQueryStr.slice(0,-5);let validIndices=new Set(this.data.keys()),groupedData=null;for(const q of selectQueries){q.field=findMatchingIndexKey(Object.keys(this.data[0]),q.field,this.config);const plugin=this.getPlugin(q.type);if(!plugin)throw new GridError(`No plugin found for header (${q.type}) for key (${q.field})`);validIndices=plugin.evaluate(q,this.dataIndexes[q.field],this.data,validIndices)}if(rangeQuery){const first=validIndices.values().next().value,lower=rangeQuery.upper<0?this.data.length+rangeQuery.upper:Math.max(0,first+rangeQuery.lower),upper=rangeQuery.upper<0?this.data.length:Math.min(this.data.length-1,first+rangeQuery.upper-1);validIndices=new Set(Array.from({length:upper-lower+1},((_,i)=>i+lower)))}if(groupQuery){const groupField=findMatchingIndexKey(Object.keys(this.data[0]),groupQuery.field,this.config);groupedData={};for(const index of validIndices){const row=this.data[index],groupKey=row[groupField];(groupedData[groupKey]||=[]).push(row)}return sortQuery&&console.warn("Sorting grouped data is not yet supported"),groupedData}if(sortQuery){const sortedData=this.data.filter(((_,i)=>validIndices.has(i)));return this.getPlugin(sortQuery.type).sort(sortQuery,sortedData)}if(fuzzyQuery){const lowerSearch=fuzzyQuery.value,allKeys=Object.keys(this.data[0]).filter((k=>"internal_id"!==k));validIndices=new Set([...validIndices].filter((index=>{const row=this.data[index];return allKeys.some((key=>String(row[key]).toLowerCase().includes(lowerSearch)))})))}return this.data.filter(((_,i)=>validIndices.has(i)))}addSelect(key,operator,value){if(!key||!operator||void 0===value)return;const newClause=`${key} ${operator} ${value}`;0===this.currentQueryStr.length?this.currentQueryStr=newClause:this.currentQueryStr+=` and ${newClause}`}setSelect(key,operator,value){this.removeSelect(key),this.addSelect(key,operator,value)}removeSelect(key,operator,value){if(void 0!==key&&void 0===operator&&void 0===value)this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith(key))).join(" and ");else if(void 0!==key&&void 0!==operator&&void 0===value)this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith(`${key} ${operator}`))).join(" and ");else if(void 0!==key&&void 0!==operator&&void 0!==value){const clauseToRemove=`${key} ${operator} ${value}`;this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>clause.trim()!==clauseToRemove)).join(" and ")}}setSort(key,direction){if(void 0===key||void 0===direction)return void this.removeSort();const newClause=`sort ${key} ${direction}`;this.removeSort(),0===this.currentQueryStr.length?this.currentQueryStr=newClause:this.currentQueryStr+=` and ${newClause}`}removeSort(){this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith("sort"))).join(" and ")}setRange(lower,upper){if(void 0===lower||void 0===upper)return void this.removeRange();const newClause=`range ${lower} ${upper}`;this.removeRange(),0===this.currentQueryStr.length?this.currentQueryStr=newClause:this.currentQueryStr+=` and ${newClause}`}removeRange(){this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith("range"))).join(" and ")}setGroup(key){if(void 0===key)return void this.removeGroup();const newClause=`group ${key}`;this.removeGroup(),0===this.currentQueryStr.length?this.currentQueryStr=newClause:this.currentQueryStr+=` and ${newClause}`}removeGroup(){this.currentQueryStr=this.currentQueryStr.split("and").filter((clause=>!clause.trim().startsWith("group"))).join(" and ")}runCurrentQuery(){return grid.eventEmitter.emit("engine-query-update",grid.engine.currentQueryStr),this.query(this.currentQueryStr)}addPlugin(plugin,dontOverride=!1){if(!(plugin instanceof TypePlugin))throw new GridError("Plugin must extend TypePlugin");const existingPlugin=this.getPlugin(plugin.name,!0);dontOverride&&existingPlugin||(existingPlugin&&!dontOverride?(console.warn("Plugin already exists, removing the old plugin"),this.plugins[plugin.name.replace("TypePlugin","")]=plugin):this.plugins[plugin.name.replace("TypePlugin","")]=plugin)}getPlugin(name,justChecking=!1){if(!name)throw new GridError("Plugin name not provided");if("string"!=typeof name)return!1;var plugin=this.plugins[name.replace("TypePlugin","")];if(plugin||(plugin=this.plugins[this.headers[name]?.type]),!plugin&&!justChecking)throw new GridError("Plugin not found: "+name);return!(!plugin&&justChecking)&&plugin}addConnector(Connector,dontOverride=!1){if(!(Connector instanceof ExportConnector))throw new GridError("Connector must extend ExportConnector");const existingConnector=this.getConnector(Connector.name,!0);dontOverride&&existingConnector||(existingConnector&&!dontOverride?(console.warn("Connector already exists, removing the old Connector"),this.connectors[Connector.name.replace("ExportConnector","")]=Connector):this.connectors[Connector.name.replace("ExportConnector","")]=Connector)}getConnector(name,justChecking=!1){if(!name)throw new GridError("Connector name not provided");if("string"!=typeof name)return!1;const Connector=this.connectors[name];if(!Connector&&!justChecking)throw new GridError("Connector not found: "+name);return!(!Connector&&justChecking)&&Connector}importData(data,config){if(this.data&&this.data.length>0)throw new GridError("Data already imported, re-importing data is not (yet) supported");if("json"===config.type)this.#parseJsonData(data,config);else{if("csv"!==config.type)throw new GridError("Invalid data type");this.#parseCSVData(data,config)}0===Object.keys(this.headers).length&&(console.warn("No headers provided, auto detecting headers, please provide so the system can you more optimal plugins"),this.autoDetectHeaders(this.data[0]))}alterData(datum,column,value){const oldValue=this.data[datum][column];this.data&&this.data.length>0&&(this.data[datum][column]=value),this.dataIndexes&&this.dataIndexes[column]&&(this.dataIndexes[column].has(oldValue)&&this.dataIndexes[column].get(oldValue).delete(datum),this.dataIndexes[column].has(value)||this.dataIndexes[column].set(value,new Set),this.dataIndexes[column].get(value).add(datum))}#parseJsonData(data,config){if("string"!=typeof data&&"object"!=typeof data)throw new GridError("Data must be a string (raw JSON) OR an object (parsed JSON)");if(data="string"==typeof data?JSON.parse(data):data,!Array.isArray(data))throw new GridError("Data must be an array");if(0===data.length)return console.warn("No data provided"),[];this.data=data.map(((item,index)=>{const newItem={};newItem.internal_id=index;for(const key of Object.keys(item))newItem[key]=item[key];return newItem}))}#parseCSVData(data,config){const lines=data.split("\n"),headers=lines[0].split(",").map((header=>header.replace(/"/g,"").replace(" ","_").replace("\r","")));this.data=lines.slice(1).map(((line,index)=>{const values=line.split(/(?!"[a-zA-z0-9\s.()]*)(?:,|,"|",)(?![a-zA-z0-9\s.()]*")/gim),newItem={};return newItem.internal_id=index,headers.forEach(((header,i)=>{"string"==typeof values[i]&&(values[i].endsWith('"')?values[i]=values[i].slice(0,-1):values[i]),newItem[header]=values[i]})),newItem})).slice(0,-1)}requestExport(fileName,fileType){const Connector=this.getConnector(fileType);if(!Connector)return void console.error("Connector not found: "+fileType);this.data.map((row=>{const newRow={};return Object.keys(row).forEach((key=>{"internal_id"!==key&&(newRow[key]=row[key])})),newRow}));try{const exportResult=Connector.export(this.data.map((row=>{const newRow={};return Object.keys(row).forEach((key=>{"internal_id"!==key&&(newRow[key]=row[key])})),newRow})),this.headers,fileName);if(!exportResult)return void console.warn("No data returned for export");const blob=new Blob([exportResult],{type:Connector.mimeType}),url=URL.createObjectURL(blob),a=document.createElement("a");a.href=url,a.download=`${fileName||"export"}.${Connector.extension}`,document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(url)}catch(error){console.error(error.message),alert("Export failed. See console for details.")}}getExportConnectors=()=>Object.keys(this.connectors)}class EditTracker{constructor(){this.updates=[]}addEdit(data){this.updates.push(data),this.updates=this.cleanUpdates(this.updates)}cleanUpdates(updates){const latestUpdates=new Map;return updates.forEach((update=>{const key=`${update.row.internal_id}_${update.column}`;latestUpdates.set(key,{...update})})),Array.from(latestUpdates.values()).filter((update=>update.previousValue!==update.newValue))}clear(){this.updates=[]}}class GridError extends Error{constructor(message){super(message),this.name="GridError",this.stack=""}}function FastHash(object){const string=JSON.stringify(object);let hash=0;for(let i=0;i<string.length;i++)hash=(hash<<5)-hash+string.charCodeAt(i),hash|=0;return hash}function findMatchingIndexKey(dataIndexesKeys,field,config){const normalize=str=>{let result=str;if(config.SymbolsToIgnore?.length){const regex=new RegExp(`[${config.SymbolsToIgnore.join("").replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}]`,"g");result=result.replace(regex,"")}return config.useStrictCase?result:result.toLowerCase()},normalizedField=normalize(field);return dataIndexesKeys.find((key=>normalize(key)===normalizedField))}function firstItem(data){if(!data||"object"!=typeof data)return!1;if(Array.isArray(data))return data[0];return data[Object.keys(data)[0]]}async function waitState(){return new Promise((resolve=>{let timerId=setInterval((function(){1==o.state&&(clearInterval(timerId),resolve(o.state))}),1e3)}))}Array.prototype.remove=function(entry){const index=this.indexOf(entry);return index>-1&&this.splice(index,1),this},Number.prototype.padLeft=function(n,str){let s=String(this);for(;s.length<n;)s=str+s;return s},Date.prototype.addDays=function(days){var date=new Date(this.valueOf());return date.setDate(date.getDate()+days),date},Date.prototype.addHours=function(hours){var date=new Date(this.valueOf());return date.setHours(date.getHours()+hours),date},Date.prototype.addMinutes=function(minutes){var date=new Date(this.valueOf());return date.setMinutes(date.getMinutes()+minutes),date},Date.prototype.addSeconds=function(seconds){var date=new Date(this.valueOf());return date.setSeconds(date.getSeconds()+seconds),date},Date.prototype.addMilliseconds=function(milliseconds){var date=new Date(this.valueOf());return date.setMilliseconds(date.getMilliseconds()+milliseconds),date};class EventEmitter{constructor(){this.events={}}subscribe(event,listener){return this.events[event.toLocaleLowerCase()]||(this.events[event.toLocaleLowerCase()]=[]),this.events[event.toLocaleLowerCase()].push(listener),()=>this.unsubscribe(event,listener)}on=this.subscribe;unsubscribe(event,listenerToRemove){this.events[event.toLocaleLowerCase()]&&(this.events[event.toLocaleLowerCase()]=this.events[event.toLocaleLowerCase()].filter((listener=>listener!==listenerToRemove)))}off=this.unsubscribe;emit(event,data){this.events[event.toLocaleLowerCase()]&&this.events[event.toLocaleLowerCase()].forEach((listener=>listener(data)))}}class KeyboardShortcuts{constructor(){this.shortcuts=new Map,this.listener=this.#_handleKeyPress.bind(this),document.addEventListener("keydown",this.listener)}#_normalizeKey(key){return key.toLowerCase().replace(/\s+/g,"")}#_handleKeyPress(event){const pressedKey=this.#_normalizeKey(`${event.ctrlKey?"ctrl+":""}${event.shiftKey?"shift+":""}${event.altKey?"alt+":""}${event.metaKey?"meta+":""}${event.key}`),callback=this.shortcuts.get(pressedKey);callback&&(event.preventDefault(),callback(event))}addShortcut(keys,description,callback){const normalizedKeys=this.#_normalizeKey(keys);this.shortcuts.has(normalizedKeys)?console.warn(`Shortcut '${keys}' is already assigned.`):this.shortcuts.set(normalizedKeys,callback)}removeShortcut(keys){const normalizedKeys=this.#_normalizeKey(keys);this.shortcuts.has(normalizedKeys)?this.shortcuts.delete(normalizedKeys):console.warn(`Shortcut '${keys}' does not exist.`)}listShortcuts(){return Array.from(this.shortcuts.keys())}clearShortcuts(){this.shortcuts.clear()}destroy(){document.removeEventListener("keydown",this.listener),this.clearShortcuts()}}class ContextMenu{static ITEM_TYPES={BUTTON:"button",SEPARATOR:"separator",SUBMENU:"submenu",INPUT:"input",DROPDOWN:"dropdown",CHECKBOX:"checkbox",RADIO:"radio",SEARCH_SELECT:"search-select"};static CLASSNAMES={BUTTON:"context-menu-button",SUBMENU:"context-menu-submenu",SEPARATOR:"context-menu-separator",MENU:"context-menu",INPUT:"context-menu-input",DROPDOWN:"context-menu-dropdown",CHECKBOX:"context-menu-checkbox",RADIO:"context-menu-radio",CONTAINER:"context-menu-container",SEARCH_SELECT:"context-menu-search-select",ICON:"context-menu-icon",LABEL:"context-menu-label"};constructor(options={}){this.options={width:options.width||200,animation:{enabled:options.animation?.enabled??!0,duration:options.animation?.duration||200,timing:options.animation?.timing||"ease-out"},position:{xOffset:options.position?.xOffset||0,yOffset:options.position?.yOffset||0},icons:options.icons||{submenu:"❯"},style:{backgroundColor:options.style?.backgroundColor||"#ffffff",textColor:options.style?.textColor||"#333333",backgroundHoverColor:options.style?.backgroundHoverColor||"#f0f0f0",border:options.style?.border||"rgba(0, 0, 0, 0.08)",shadow:options.style?.shadow||"0 10px 25px rgba(0, 0, 0, 0.1)",accent:options.style?.accent||"#3b82f6",separator:options.style?.separator||"rgba(0, 0, 0, 0.08)",padding:options.style?.padding||"10px",paddingHorizontal:options.style?.paddingHorizontal||"15px",gap:options.style?.gap||"10px",borderRadius:options.style?.borderRadius||"8px",borderRadiusInput:options.style?.borderRadiusInput||"4px",fontSize:options.style?.fontSize||"14px",transition:options.style?.transition||"0.2s",transitionFast:options.style?.transitionFast||"0.1s",transitionInput:options.style?.transitionInput||"0.2s"},indentLevel:options.indentLevel||0,isRoot:void 0===options.isRoot,closeOnClick:options.closeOnClick,closeOnOutsideClick:options.closeOnOutsideClick},this.items=[],this.id=this.#_generateId(),this.installStyles()}addItem(type,config){const item={id:(config?.id??this.#_generateId())+"",type:type,position:this.items.length,...config};return void 0===item.id&&(item.id=this.#_generateId()),item.type===ContextMenu.ITEM_TYPES.SUBMENU&&(item.submenu.options.indentLevel=(this.options.indentLevel||0)+1),this.#_validateItem(item),this.items.push(item),this}button(text,action,config={}){return this.addItem(ContextMenu.ITEM_TYPES.BUTTON,{text:text,action:action,icon:config.icon,ficon:config.ficon,disabled:config.disabled,marked:config.marked,showWhen:config.showWhen,id:config.id})}input(label,config={}){return this.addItem(ContextMenu.ITEM_TYPES.INPUT,{label:label,placeholder:config.placeholder,value:config.value,onChange:config.onChange,showWhen:config.showWhen,id:config.id})}dropdown(label,options,config={}){return this.addItem(ContextMenu.ITEM_TYPES.DROPDOWN,{label:label,options:options,value:config.value,onChange:config.onChange,multiSelect:config.multiSelect,showWhen:config.showWhen,id:config.id})}checkbox(text,config={}){return this.addItem(ContextMenu.ITEM_TYPES.CHECKBOX,{text:text,checked:config.checked||!1,onChange:config.onChange,showWhen:config.showWhen,id:config.id})}radioGroup(name,options,config={}){return options.forEach((option=>{this.addItem(ContextMenu.ITEM_TYPES.RADIO,{label:option.label,value:option.value,name:name,checked:option.checked,onChange:config.onChange,showWhen:config.showWhen,id:config.id})})),this}separator(){return this.addItem(ContextMenu.ITEM_TYPES.SEPARATOR,{})}submenu(text,submenuBuilder,config={}){const options={...this.options,isRoot:!1,indentLevel:(this.options.indentLevel||0)+1,showWhen:config.showWhen,id:config.id},submenu=new ContextMenu(options);submenuBuilder(submenu);const items=this.addItem(ContextMenu.ITEM_TYPES.SUBMENU,{text:text,submenu:submenu,icon:config.icon,ficon:config.ficon,showWhen:config.showWhen,id:config.id}).items;return items[items.length-1].id=submenu.id,this}searchSelect(label,options,config={}){return this.addItem(ContextMenu.ITEM_TYPES.SEARCH_SELECT,{label:label,options:options,value:config.value,onChange:config.onChange,showWhen:config.showWhen,id:config.id})}showAt(x,y,autoAdd=!0){const menu=this.#_render();return document.getElementById(this.id)&&document.getElementById(this.id).remove(),autoAdd&&document.body.appendChild(menu),this.#_setupEventHandlers(menu),this.#_positionMenu(menu,{x:x,y:y,position:"fixed"}),this.#_animateIn(menu),menu}destroy(){const menu=document.querySelector("body > ."+ContextMenu.CLASSNAMES.MENU);menu&&menu.remove();const{handleClick:handleClick,handleContextMenu:handleContextMenu,handleMouseOver:handleMouseOver}=this._eventHandlers||{};handleClick&&document.removeEventListener("click",handleClick),handleContextMenu&&document.removeEventListener("contextmenu",handleContextMenu),handleMouseOver&&document.removeEventListener("mouseover",handleMouseOver),this?.clear()}clear(){this.items=[];const menu=document.getElementById(this.id);menu&&(menu.innerHTML="")}#_setupEventHandlers(menu){const handleMouseLeave=event=>{const target=event.target;if(target.className===ContextMenu.CLASSNAMES.MENU)return void target.remove();const submenu=document.getElementById(target.dataset?.submenuId),isMouseOverButton=target.matches(":hover"),isMouseOverSubmenu=submenu?.matches(":hover");isMouseOverButton||isMouseOverSubmenu||submenu?.remove()};menu.addEventListener("click",(e=>{if(!(e.target.classList.contains(ContextMenu.CLASSNAMES.DROPDOWN)||e.target.classList.contains(ContextMenu.CLASSNAMES.INPUT)||e.target.classList.contains(ContextMenu.CLASSNAMES.CHECKBOX)||e.target.classList.contains(ContextMenu.CLASSNAMES.RADIO)||e.target.classList.contains(ContextMenu.CLASSNAMES.SEARCH_SELECT))){if(e.target.classList.contains(ContextMenu.CLASSNAMES.BUTTON)){const button=this.items.find((item=>item.id===e.target.id));button&&(button.action(),this.destroy())}if(!e.target.closest("."+ContextMenu.CLASSNAMES.MENU)){if(!this.options.closeOnOutsideClick)return;this.destroy()}}})),menu.addEventListener("mouseover",(e=>{if(e.target.classList.contains(ContextMenu.CLASSNAMES.SUBMENU)){const submenu=this.items.find((item=>item.id===e.target.dataset.submenuId));if(submenu){if(e.target.parentElement.querySelector("#"+submenu.submenu.id))return;const htmlElement=submenu.submenu.#_render();submenu.submenu.#_setupEventHandlers(htmlElement),submenu.submenu.#_positionMenu(htmlElement,{x:e.target.getBoundingClientRect().right,y:e.target.getBoundingClientRect().top}),htmlElement.style.position="absolute",htmlElement.style.left=this.options.width+"px",htmlElement.style.top=e.target.getBoundingClientRect().top-e.target.parentElement.getBoundingClientRect().top+"px",e.target.parentElement.appendChild(htmlElement),htmlElement.addEventListener("mouseleave",handleMouseLeave),e.target.addEventListener("mouseleave",handleMouseLeave)}}})),addEventListener("click",(e=>{e.target.closest("."+ContextMenu.CLASSNAMES.MENU)||this.options.closeOnOutsideClick&&this.destroy()}))}#_validateItem(item){const validTypes=Object.values(ContextMenu.ITEM_TYPES);if(!item.type||!validTypes.includes(item.type))throw new Error(`Invalid item type: ${item.type}. Allowed types are: ${validTypes.join(", ")}`);switch(item.type){case ContextMenu.ITEM_TYPES.BUTTON:if(!item.text||"string"!=typeof item.text)throw new Error('Button item must have a "text" property of type string.');if(item.action&&"function"!=typeof item.action)throw new Error("Button item action must be a function.");break;case ContextMenu.ITEM_TYPES.SEPARATOR:break;case ContextMenu.ITEM_TYPES.SUBMENU:if(!(item.submenu&&item.submenu instanceof ContextMenu))throw new Error('Submenu item must have a "submenu" property that is an instance of ContextMenu.');break;case ContextMenu.ITEM_TYPES.INPUT:if(!item.label||"string"!=typeof item.label)throw new Error('Input item must have a "label" property of type string.');break;case ContextMenu.ITEM_TYPES.DROPDOWN:if(!item.label||"string"!=typeof item.label)throw new Error('Dropdown item must have a "label" property of type string.');if(!Array.isArray(item.options)||0===item.options.length)throw new Error('Dropdown item must have a non-empty "options" array.');break;case ContextMenu.ITEM_TYPES.CHECKBOX:if(!item.text||"string"!=typeof item.text)throw new Error('Checkbox item must have a "text" property of type string.');if("boolean"!=typeof item.checked)throw new Error('Checkbox item must have a "checked" property of type boolean.');break;case ContextMenu.ITEM_TYPES.RADIO:if(!item.label||"string"!=typeof item.label)throw new Error('Radio item must have a "label" property of type string.');if(!item.name||"string"!=typeof item.name)throw new Error('Radio item must have a "name" property of type string.');break;case ContextMenu.ITEM_TYPES.SEARCH_SELECT:if(!item.label||"string"!=typeof item.label)throw new Error('SearchSelect item must have a "label" property of type string.');if(!Array.isArray(item.options)||0===item.options.length)throw new Error('SearchSelect item must have a non-empty "options" array.');break;default:throw new Error(`Unhandled item type: ${item.type}`)}}#_generateId(){return"_"+Math.random().toString(36).substring(2,9)}#_render(){const menuContainer=document.createElement("div");return menuContainer.classList.add(ContextMenu.CLASSNAMES.MENU),menuContainer.id=this.id,menuContainer.setAttribute("role","menu"),menuContainer.setAttribute("aria-orientation","vertical"),menuContainer.style.width=`${this.options.width}px`,menuContainer.dataset.indent=this.options.indentLevel,this.items.forEach((item=>{let element;switch(item.type){case ContextMenu.ITEM_TYPES.BUTTON:element=this.#_createButton(item);break;case ContextMenu.ITEM_TYPES.SEPARATOR:element=this.#_createSeparator();break;case ContextMenu.ITEM_TYPES.SUBMENU:element=this.#_createSubmenu(item);break;case ContextMenu.ITEM_TYPES.INPUT:element=this.#_createInput(item);break;case ContextMenu.ITEM_TYPES.DROPDOWN:element=this.#_createDropdown(item);break;case ContextMenu.ITEM_TYPES.CHECKBOX:element=this.#_createCheckbox(item);break;case ContextMenu.ITEM_TYPES.RADIO:element=this.#_createRadio(item);break;case ContextMenu.ITEM_TYPES.SEARCH_SELECT:element=this.#_createSearchSelect(item);break;default:console.warn(`Unknown item type: ${item.type}`)}element&&menuContainer.appendChild(element),setTimeout((()=>{if(item.showWhen){const{elementId:elementId,value:value}=item.showWhen,controllingElement=document.querySelector("#"+elementId);if(controllingElement){const toggleVisibility=()=>{const shouldShow=value.includes(controllingElement.value);element.style.display=shouldShow?"block":"none"};controllingElement.addEventListener("input",toggleVisibility),controllingElement.addEventListener("change",toggleVisibility),toggleVisibility()}}}),0)})),menuContainer}#_createButton(item){const button=document.createElement("button");if(button.classList.add(ContextMenu.CLASSNAMES.BUTTON),button.id=item.id,button.innerText=item.text,button.disabled=item.disabled||!1,button.dataset.marked=item.marked||!1,item.icon){const icon=document.createElement("span");icon.innerText=item.icon,button.prepend(icon)}if(item.ficon){const ficon=document.createElement("i");ficon.className=item.ficon,button.append(ficon)}return button}#_createSeparator(){const separator=document.createElement("div");return separator.classList.add(ContextMenu.CLASSNAMES.SEPARATOR),separator}#_createSubmenu(item){const submenuButton=document.createElement("button");if(submenuButton.classList.add(ContextMenu.CLASSNAMES.SUBMENU),submenuButton.innerText=item.text,submenuButton.setAttribute("aria-haspopup","true"),submenuButton.dataset.submenuId=item.id,item.icon){const icon=document.createElement("span");icon.innerText=item.icon,submenuButton.prepend(icon)}const moreIcon=document.createElement("span");if(moreIcon.innerText=this.options.icons.submenu,moreIcon.style.marginLeft="auto",submenuButton.append(moreIcon),item.ficon){const ficon=document.createElement("i");ficon.className=item.ficon,submenuButton.append(ficon)}return submenuButton}#_createInput(item){const inputContainer=document.createElement("div");inputContainer.classList.add(ContextMenu.CLASSNAMES.INPUT);const input=document.createElement("input");return input.type=item.type||"text",input.placeholder=item.placeholder||"",input.value=item.value||"",input.oninput=e=>item.onChange?.(e.target.value),input.id=item.id,inputContainer.appendChild(input),inputContainer}#_createDropdown(item){const select=document.createElement("select");return select.classList.add(ContextMenu.CLASSNAMES.DROPDOWN),select.id=item.id,item.options.forEach((option=>{const opt=document.createElement("option");opt.value=option.value,opt.textContent=option.label,option.value===item.value&&(opt.selected=!0),select.appendChild(opt)})),select.onchange=e=>item.onChange?.(e.target.value),select}#_createCheckbox(item){const label=document.createElement("label");label.classList.add(ContextMenu.CLASSNAMES.CHECKBOX);const checkbox=document.createElement("input");checkbox.type="checkbox",checkbox.checked=item.checked||!1,checkbox.onchange=e=>item.onChange?.(e.target.checked),checkbox.id=item.id;const span=document.createElement("span");return span.textContent=item.text,label.appendChild(checkbox),label.appendChild(span),label}#_createRadio(item){const label=document.createElement("label");label.classList.add(ContextMenu.CLASSNAMES.RADIO);const radio=document.createElement("input");radio.type="radio",radio.name=item.name,radio.value=item.value,radio.checked=item.checked||!1,radio.onchange=e=>item.onChange?.(e.target.value),radio.id=item.id;const span=document.createElement("span");return span.textContent=item.label,label.appendChild(radio),label.appendChild(span),label}#_createSearchSelect(item){const container=document.createElement("div");container.classList.add(ContextMenu.CLASSNAMES.SEARCH_SELECT),container.id=item.id;const input=document.createElement("input");input.type="text",input.placeholder=item.label||"";const list=document.createElement("div");list.classList.add(ContextMenu.CLASSNAMES.SEARCH_SELECT+"-list");const toggleAll=document.createElement("button");return toggleAll.textContent="Toggle All",toggleAll.onclick=()=>{const checkboxes=list.querySelectorAll('input[type="checkbox"]'),allChecked=Array.from(checkboxes).every((cb=>cb.checked));checkboxes.forEach((checkbox=>{checkbox.checked=!allChecked}));const selectedValues=Array.from(list.querySelectorAll('input[type="checkbox"]:checked')).map((cb=>cb.value));item.onChange?.(selectedValues),container.value=selectedValues},list.appendChild(toggleAll),item.options.forEach((option=>{const checkbox=document.createElement("input");checkbox.type="checkbox",checkbox.value=option.value,checkbox.checked=option.checked||!1,checkbox.onchange=()=>{const selectedValues=Array.from(list.querySelectorAll('input[type="checkbox"]:checked')).map((cb=>cb.value));item.onChange?.(selectedValues),container.value=selectedValues};const label=document.createElement("label");label.textContent=option.label,label.appendChild(checkbox),list.appendChild(label)})),container.appendChild(input),container.appendChild(list),input.oninput=e=>{const searchValue=e.target.value.toLowerCase();list.querySelectorAll("label").forEach((item=>{const text=item.textContent.toLowerCase();item.style.display=text.includes(searchValue)?"block":"none"}))},container}#_positionMenu(menu,position){const{x:x,y:y}=position,{xOffset:xOffset,yOffset:yOffset}=this.options.position;menu.style.left=`${x+xOffset||this.options.width}px`,menu.style.top=`${y+yOffset}px`,menu.style.position="fixed"}#_animateIn(menu){this.options.animation.enabled&&(menu.style.opacity=0,menu.style.transform="scale(0.9)",menu.style.transition=`opacity ${this.options.animation.duration}ms ${this.options.animation.timing}, \n                             transform ${this.options.animation.duration}ms ${this.options.animation.timing}`,requestAnimationFrame((()=>{menu.style.opacity=1,menu.style.transform="scale(1)"})))}installStyles(){if(document.getElementById("context-menu-styles"))return;const styleElement=document.createElement("style");styleElement.id="context-menu-styles",styleElement.textContent="\n:root {\n  --context-menu-bg: "+(this.options.style.backgroundColor||"#ffffff")+";\n  --context-menu-text: "+(this.options.style.textColor||"#333333")+";\n  --context-menu-hover-bg: "+(this.options.style.backgroundHoverColor||"#f0f0f0")+";\n  --context-menu-border: "+(this.options.style.border||"rgba(0, 0, 0, 0.08)")+";\n  --context-menu-shadow: "+(this.options.style.shadow||"0 10px 25px rgba(0, 0, 0, 0.1)")+";\n  --context-menu-accent: "+(this.options.style.accent||"#3b82f6")+";\n  --context-menu-separator: "+(this.options.style.separator||"rgba(0, 0, 0, 0.08)")+";\n  --padding: "+(this.options.style.padding||"10px")+";\n  --padding-horizontal: "+(this.options.style.paddingHorizontal||"15px")+";\n  --gap: "+(this.options.style.gap||"10px")+";\n  --border-radius: "+(this.options.style.borderRadius||"8px")+";\n  --border-radius-input: "+(this.options.style.borderRadiusInput||"4px")+";\n  --font-size: "+(this.options.style.fontSize||"14px")+";\n  --transition: "+(this.options.style.transition||"0.2s")+" ease;\n  --transition-fast: "+(this.options.style.transitionFast||"0.1s")+" ease;\n  --transition-input: "+(this.options.style.transitionInput||"0.2s")+" ease;\n}\n\n.context-menu {\n  background: var(--context-menu-bg);\n  border: 1px solid var(--context-menu-border);\n  border-radius: var(--border-radius);\n  box-shadow: var(--context-menu-shadow);\n  padding: var(--padding) 0;\n  min-width: 220px;\n  z-index: 1000;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  color: var(--context-menu-text);\n  animation: contextMenuSlideIn var(--transition-fast) forwards;\n  transform-origin: top center;\n}\n\n.context-menu:has(> .context-menu-dropdown)::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 500%;\n    z-index: -1;\n}\n\n.context-menu-button,\n.context-menu-submenu {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: calc(var(--padding) + 2px) var(--padding-horizontal);\n  border: none;\n  background: none;\n  font-size: var(--font-size);\n  text-align: left;\n  cursor: pointer;\n  color: var(--context-menu-text);\n  transition: background-color var(--transition-fast), color var(--transition-fast);\n  position: relative;\n  gap: var(--gap);\n}\n\n.context-menu-button:disabled {\n  color: rgba(26, 26, 26, 0.4);\n  cursor: not-allowed;\n}\n\n.context-menu-button[data-marked=\"true\"] {\n  font-weight: bold;\n  background-color: var(--context-menu-accent);\n  color: white;\n  border-radius: calc(var(--border-radius) / 2);\n  border: 1px solid var(--context-menu-accent);\n}\n\n.context-menu-button[data-marked=\"true\"]:hover {\n  background-color: var(--context-menu-accent);\n  color: white;\n}\n\n.context-menu-button span,\n.context-menu-submenu span {\n  display: flex;\n  align-items: center;\n  pointer-events: none;\n}\n\n.context-menu-button:hover,\n.context-menu-submenu:hover {\n  background-color: var(--context-menu-hover-bg);\n}\n\n.context-menu-button:focus,\n.context-menu-submenu:focus {\n  outline: none;\n  background-color: var(--context-menu-hover-bg);\n}\n\n.context-menu-separator {\n  height: 1px;\n  background-color: var(--context-menu-separator);\n  margin: var(--padding) 0;\n}\n\n.context-menu-input {\n  padding: var(--padding) var(--padding-horizontal);\n}\n\n.context-menu-input input {\n  width: calc(100% - var(--padding-horizontal));\n  padding: var(--padding);\n  border: 1px solid var(--context-menu-border);\n  border-radius: var(--border-radius-input);\n  font-size: var(--font-size);\n  background-color: #f9fafb;\n  transition: border-color var(--transition-input), box-shadow var(--transition-input);\n}\n\n.context-menu-input input:focus {\n  outline: none;\n  border-color: var(--context-menu-accent);\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);\n}\n\n.context-menu-dropdown {\n  width: calc(100% - calc(var(--padding-horizontal) * 2));\n  margin: var(--padding) var(--padding-horizontal);\n  padding: var(--padding);\n  border: 1px solid var(--context-menu-border);\n  border-radius: var(--border-radius-input);\n  font-size: var(--font-size);\n  background-color: #f9fafb;\n  transition: border-color var(--transition-input), box-shadow var(--transition-input);\n}\n\n.context-menu-checkbox,\n.context-menu-radio {\n  display: flex;\n  align-items: center;\n  padding: calc(var(--padding) + 2px) var(--padding-horizontal);\n  font-size: var(--font-size);\n  cursor: pointer;\n  transition: background-color var(--transition-fast);\n}\n\n.context-menu-checkbox:hover,\n.context-menu-radio:hover {\n  background-color: var(--context-menu-hover-bg);\n}\n\n.context-menu-checkbox input,\n.context-menu-radio input {\n  margin-right: var(--gap);\n  accent-color: var(--context-menu-accent);\n}\n\n.context-menu-checkbox input:focus,\n.context-menu-radio input:focus {\n  outline: none;\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);\n}\n\n.context-menu-checkbox input:checked,\n.context-menu-radio input:checked {\n  background-color: var(--context-menu-accent);\n}\n\n.context-menu-search-select {\n  display: flex;\n  flex-direction: column;\n  padding: calc(var(--padding) + 2px) var(--padding-horizontal);\n}\n\n.context-menu-search-select input {\n  padding: var(--padding);\n  border: 1px solid var(--context-menu-border);\n  border-radius: var(--border-radius-input);\n  font-size: var(--font-size);\n  background-color: #f9fafb;\n  transition: border-color var(--transition-input), box-shadow var(--transition-input);\n}\n\n.context-menu-search-select input:focus {\n  outline: none;\n  border-color: var(--context-menu-accent);\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);\n}\n\n.context-menu-search-select-list {\n  max-height: 200px;\n  overflow-y: auto;\n  margin-top: var(--padding);\n}\n\n.context-menu-search-select-list button {\n    width: 100%;\n    padding: var(--padding);\n    background: #007BFF;\n    font-size: var(--font-size);\n    text-align: left;\n    cursor: pointer;\n    color: #ffffff;\n    transition: background-color var(--transition-fast), color var(--transition-fast);\n}\n\n.context-menu-search-select-list label {\n  display: flex;\n  flex-direction: row-reverse;\n  gap: var(--gap);\n  align-items: center;\n  padding: var(--padding) 0;\n  justify-content: flex-end;\n}\n\n.context-menu-search-select-list label:hover {\n  background-color: var(--context-menu-hover-bg);\n}\n\n.context-menu-search-select-list input {\n  margin-right: var(--gap);\n  accent-color: var(--context-menu-accent);\n}\n\n.context-menu-search-select-list input:focus {\n  outline: none;\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);\n}\n\n.context-menu-submenu {\n  position: relative;\n}\n\n/* Animation */\n@keyframes contextMenuSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(calc(-1 * var(--padding)));\n  }\n}\n\n/* Focus and Accessibility */\n.context-menu:focus {\n  outline: none;\n}\n\n.context-menu-button:focus-visible,\n.context-menu-submenu:focus-visible {\n  outline: 2px solid var(--context-menu-accent);\n  outline-offset: -2px;\n}\n",document.head.appendChild(styleElement)}}
//# sourceMappingURL=DynamicGrid.min.js.map